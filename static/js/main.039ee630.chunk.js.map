{"version":3,"sources":["components/Modal/Modal.js","components/Header/Header.js","components/SideBar/Card/DetailCard/DetailCard.js","lib/Context.js","contexts/detailscontext.js","components/SideBar/Card/HistoryCard/Statistics.js","components/SideBar/Bar/HistoryBar/HistoryBar.js","components/SideBar/Bar/DetailBar/DetailBar.js","components/TestContainer/TypingChallenge/ChallengeArea/TypingInputArea/TypingInputArea.js","components/TestContainer/TypingChallenge/ChallengeArea/TypingParagraphTextaArea/TypingParagraphTextArea.js","contexts/paragraphContext.js","components/SideBar/Card/DetailCard/ResultCard.js","components/TestContainer/TypingChallenge/ChallengeArea/ChallengeArea.js","components/TestContainer/TypingChallenge/TypingChallengeHeaderArea/Button/RestartButton.js","components/TestContainer/TypingChallenge/TypingChallengeHeaderArea/Input/TimeRemainingInput.js","components/TestContainer/TypingChallenge/TypingChallengeHeaderArea/TypingChallengeHeaderArea.js","components/TestContainer/TypingChallenge/TypingChallenge.js","components/Chart/UserChart.js","data/exampleText.js","helper/helper.js","App.js","index.js"],"names":["LoginModal","modalHandler","MODAL_IS_OPEN","setUSER_NAME_FROM_INPUT","isOpen","className","onChange","e","target","value","placeholder","onClick","Header","userName","href","DetailCard","scoreUpdatingValue","cardDetail","Context","Provider","children","Consumer","this","createContext","context","detailscontext","Statistics","user","USER_NAME_FROM_INPUT","ChartDataBuilder","TIMER_STARTED_BOOLEAN","DeleteUserNameHandler","useState","userAvgStat","setUserAvgStat","useEffect","avgAccuracy","avgWpm","sumOfAccuracy","sumOfWpm","noOfChallenge","userdata","map","datam","ACCURACY","WPM","Math","ceil","length","style","paddingLeft","username","HistoryBar","height","USERS_DATA","chartInfos","maxHeight","DetailsBar","isSmallerThanlaptop","useMediaQuery","query","KEY_STROKES","DeleteUserName","TypingInputArea","wordMatchHandler","TYPING_WORD","OnKeyPressHandler","useTransition","from","opacity","marginTop","enter","delay","transitions","styles","div","input","placeHolder","autoFocus","onKeyPress","TypingParagraphTextArea","ACTIVE_PARAGRAPH","WORD_INDEX","CHARACTER_BOOLEAN","WORD_BOOLEANS","CHALLENGE_AREA_BOOLEAN","apOnTextArea","setApOnTextArea","minHeight","word","index","parseInt","key","paragraphContext","ResultCard","USER_DATA","RESULT_CARD_BOOLEAN","marginLeft","leave","console","log","CORRECT","MISSPELLED","ChallengeArea","RestartButton","ActiveParaHandler","TimeRemainingInput","TIME_REMAINING","timeRemainingInputHandler","event","TypingChalengeHeaderArea","TypingChallenge","UserChart","CHART_IS_OPEN","MOMENTS_ARRAY","CHAR_CODES_ARRAY","ChartCloseHandler","USER_STAT","class","data","labels","datasets","label","backgroundColor","borderColor","borderWidth","hoverOffset","width","options","maintainAspectRatio","scales","r","ticks","backdropPadding","x","y","avgCorrect","avgMisspelled","avgKeystrokes","typingTestData","helperMethods","randomParagraphSelector","list","floor","random","paragraphSlicer","paragraph","SLICER_INDEX","slice","wordMatchChecker","firstWord","secondWord","props","replace","paragraphArraySetter","cb_setter","cb_selector","texts","split","dataBuilder","setTIMER_STARTED_BOOLEAN","setUSER_STAT","setCHAR_CODES_ARRAY","setMOMENTS_ARRAY","setCHART_IS_OPEN","setTIMER_TRACKER_BOOLEAN","sumOfCorrect","sumOfKeyStrokes","sumOfMisspelled","arrayOfCharCodes","arrayOfAllCharCodes","avgMomentsArrayOfAllCharCodes","uniqueCharCodeArray","momentsArr","charCodesArr","CHAR_CODES","arr","momentObj","push","charCode","Set","sumOfMoments","charCounts","moment","avgMoment","sort","a","b","String","fromCharCode","deleteUser","cb_users","prompt","prevUsersData","JSON","parse","localStorage","getItem","newUsersData","userObj","setItem","stringify","keyPress","match_checker","SELECTED_WORD","PREV_MOMENT","PARAGRAPH_ARRAY","setWORD_INDEX","ChallengeRestartButtonHandler","setMISSPELLED","setCORRECT","setTYPING_WORD","setWORD_BOOLEANS","setACCURACY","setSELECTED_WORD","setKEY_STROKES","setCHAR_CODES","setPREV_MOMENT","prevStroke","currStroke","Date","getTime","prevIndex","currnetIndex","prevAcc","nextAcc","total","matchingIssues","prevCorrect","nextCorrect","prevMisspelled","nextMisspelled","characterMatch","setCHARACTER_BOOLEAN","char1","char2","substring","cardMaker","setRESULT_CARD_BOOLEAN","setUSERS_DATA","setUSER_DATA","currentUsersData","newUserBool","usersDataCopied","App","TIMER_TRACKER_BOOLEAN","setCHALLENGE_AREA_BOOLEAN","setMODAL_IS_OPEN","setTIME_REMAINING","RECORD_INCREASE","setRECORD_INCREASE","setWPM","setPARAGRAPH_ARRAY","setACTIVE_PARAGRAPH","setSLICER_INDEX","activeParagraphLoader","slicedParagraph","timeRemainingMinFraction","interval","setInterval","prevTime","nextTime","prevtime","nexttime","clearInterval","timeout","setTimeout","clearTimeout","backGround","isNaN","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.039ee630.chunk.js","sourcesContent":["import React from \"react\";\r\nimport Modal from \"react-modal\";\r\n\r\nconst LoginModal = ({ modalHandler, MODAL_IS_OPEN,setUSER_NAME_FROM_INPUT }) => {\r\n  return (\r\n    <Modal\r\n      isOpen={MODAL_IS_OPEN}\r\n      className=\" justify-center items-center glass-blur flex w-full h-full\"\r\n    >\r\n      <div className=\"w-3/5 h-3/5 glass bg-green-500 flex justify-center items-center shadow-2xl flex-col\">\r\n        <h1 className=\"text-6xl font-bold text-gray-200 mb-16\">\r\n          Phantom Typer\r\n        </h1>\r\n\r\n        <input\r\n          onChange={(e) => setUSER_NAME_FROM_INPUT(e.target.value)}\r\n          placeholder=\"Enter your name...\"\r\n          className=\"shadow-2xl bg-gray-200 w-3/4 h-12 outline-none p-4 text-center text-3xl font-semibold\"\r\n        ></input>\r\n        <div className=\"pt-4\">\r\n          <button\r\n            onClick={(e) => modalHandler(e)}\r\n            className=\"w-80 text-gray-200 rounded-sm  bg-gray-700 h-12 text-3xl font-bold shadow-2xl border-2 hover:border-white border-gray-800\"\r\n          >\r\n            Submit\r\n          </button>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default LoginModal;\r\n","import React from \"react\";\r\n\r\nconst Header = ({ userName }) => {\r\n  return (\r\n    <div className=\"bg-green-500 flex mx-4 p-3 box-shadow\">\r\n      <div className=\"flex-1 flex\">\r\n        <span className=\"text-4xl text-gray-800\">\r\n          <i className=\"keyboard icon\"></i>\r\n        </span>\r\n\r\n        <h1 className=\"text-4xl text-gray-800 font-bold\">\r\n          {\" \"}\r\n          Phantom Typer{\" \"}\r\n          <sup>\r\n            {\" \"}\r\n            <a\r\n              className=\"\"\r\n              target=\"blank\"\r\n              href=\"https://github.com/Aniruzzaman-anir/Phantom-Typer\"\r\n            >\r\n              <span className=\"text-xl\">\r\n                <i className=\"github icon\"></i>\r\n              </span>\r\n            </a>\r\n          </sup>\r\n        </h1>\r\n      </div>\r\n\r\n      <div className=\"flex\">\r\n        <i className=\"user icon text-2xl\"></i>\r\n        <h1 className=\"font-semibold pr-3 text-2xl\">{userName}</h1>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\nconst DetailCard = ({ scoreUpdatingValue, cardDetail }) => {\r\n  return (\r\n    <div className=\"mt-2 \">\r\n      <h3 className=\"text-lg rounded-lg box-shadow bg-green-500  text-gray-800 pl-0 text-center py-4 font-bold\">\r\n        {cardDetail}\r\n        <br></br>\r\n        <span className=\"text-xl\">{scoreUpdatingValue}</span>\r\n      </h3>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DetailCard;\r\n","class Context {\r\n    constructor(value) {\r\n        this.value = value;\r\n    }\r\n\r\n    Provider = ({children, value}) => {\r\n        this.value = value;\r\n        return children;\r\n    }\r\n \r\n    Consumer = ({children}) => {\r\n        return children(this.value)\r\n    }\r\n}\r\n\r\nconst createContext = (value = null) => {\r\n    const context = new Context(value);\r\n    return {\r\n        Provider : context.Provider,\r\n        Consumer : context.Consumer\r\n    }\r\n}\r\n\r\nexport default createContext;","import createContext from \"../lib/Context\"\r\n\r\nconst detailscontext = createContext()\r\n\r\nexport default detailscontext;","import React, { useState, useEffect } from \"react\";\r\n\r\nconst Statistics = ({\r\n  user,\r\n  USER_NAME_FROM_INPUT,\r\n  ChartDataBuilder,\r\n  TIMER_STARTED_BOOLEAN,\r\n  DeleteUserNameHandler\r\n}) => {\r\n  const [userAvgStat, setUserAvgStat] = useState({});\r\n\r\n  useEffect(() => {\r\n    let sumOfAccuracy = 0,\r\n      avgAccuracy,\r\n      sumOfWpm = 0,\r\n      avgWpm,\r\n      noOfChallenge = 0;\r\n\r\n    user.userdata.map((datam) => {\r\n      sumOfAccuracy += datam.ACCURACY;\r\n      sumOfWpm += datam.WPM;\r\n      noOfChallenge++;\r\n    });\r\n\r\n    avgAccuracy = Math.ceil(sumOfAccuracy / user.userdata.length);\r\n    avgWpm = Math.ceil(sumOfWpm / user.userdata.length);\r\n\r\n    setUserAvgStat({\r\n      avgWpm,\r\n      avgAccuracy,\r\n      noOfChallenge,\r\n    });\r\n  }, [TIMER_STARTED_BOOLEAN]);\r\n\r\n  return (\r\n    <div>\r\n      <div className=\"card-statistics \">\r\n        <div className=\"statistics bg-gray-200  text-sm pl-2 pt-2\">\r\n          {userAvgStat.avgAccuracy > 30 && userAvgStat.avgAccuracy > 90\r\n            ? \"Good\"\r\n            : \"Poor\"}\r\n\r\n          <div style={{paddingLeft:\"20%\"}} className=\" text-lg font-semibold pt-4\">\r\n            <div>{userAvgStat.noOfChallenge} times</div>\r\n            <div>accuracy: {userAvgStat.avgAccuracy}</div>\r\n            <div>wpm: {userAvgStat.avgWpm}</div>\r\n          </div>\r\n        </div>\r\n\r\n        <div\r\n          className=\"user-data-area\"\r\n          className={\r\n            user.username === USER_NAME_FROM_INPUT\r\n              ? \"user-data-area bg-green-500\"\r\n              : \"user-data-area bg-white\"\r\n          }\r\n        >\r\n          <div className=\"statistics-title\">\r\n            <div>Statistics</div>\r\n            <button\r\n              onClick={() => ChartDataBuilder(user)}\r\n              className=\"graph-link  bg-green-500 shadow-xl underline bg rounded-md px-1\"\r\n            >\r\n              Stat\r\n            </button>\r\n          </div>\r\n          \r\n            <div className=\"user-name-area text-lg\">\r\n                <span> {user.username}</span> \r\n                {\r\n                    user.username === USER_NAME_FROM_INPUT ? (\r\n                        <button onClick={() => DeleteUserNameHandler(user)} className=\"text-red-600 underline mt-1\"><i className=\"delete icon text-xl\"></i></button>\r\n                    ) : null\r\n                }\r\n               \r\n                \r\n            </div>\r\n\r\n            \r\n          \r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Statistics;\r\n","import React, { useState, useEffect } from \"react\";\r\nimport Statistics from \"../../Card/HistoryCard/Statistics\";\r\n\r\nconst HistoryBar = ({\r\n  height,\r\n  USERS_DATA,\r\n  DeleteUserNameHandler,\r\n  USER_NAME_FROM_INPUT,\r\n  chartInfos,\r\n  ChartDataBuilder,\r\n  TIMER_STARTED_BOOLEAN,\r\n}) => {\r\n  return (\r\n    <div>\r\n      {USERS_DATA.length > 0 ? (\r\n        <div style={{ maxHeight: height }} className=\" overflow-y-scroll\">\r\n          {USERS_DATA?.map((user) => (\r\n            <Statistics\r\n              key={user.username}\r\n              DeleteUserNameHandler={DeleteUserNameHandler}\r\n              TIMER_STARTED_BOOLEAN={TIMER_STARTED_BOOLEAN}\r\n              ChartDataBuilder={ChartDataBuilder}\r\n              key={user.username}\r\n              chartInfos={chartInfos}\r\n              user={user}\r\n              USER_NAME_FROM_INPUT={USER_NAME_FROM_INPUT}\r\n            />\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <div\r\n          style={{ maxHeight: \"45rem\" }}\r\n          className=\"flex font-semibold justify-center items-center mt-32\"\r\n        >\r\n          <span className=\"text-2xl\">\r\n            {\" \"}\r\n            your typing performance statistics will be here\r\n          </span>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HistoryBar;\r\n","import React from \"react\";\r\n\r\nimport DetailCard from \"../../Card/DetailCard/DetailCard\";\r\nimport Detailscontext from \"../../../../contexts/detailscontext\";\r\nimport HistoryBar from \"../../Bar/HistoryBar/HistoryBar\";\r\nimport { useMediaQuery } from \"react-responsive\";\r\n\r\nconst DetailsBar = () => {\r\n  const isSmallerThanlaptop = useMediaQuery({\r\n    query: \"(max-width: 1024px)\",\r\n  });\r\n\r\n  return (\r\n    <div>\r\n      <Detailscontext.Consumer>\r\n        {({ KEY_STROKES }) => (\r\n          <DetailCard cardDetail={\"strokes\"} scoreUpdatingValue={KEY_STROKES} />\r\n        )}\r\n      </Detailscontext.Consumer>\r\n\r\n      <Detailscontext.Consumer>\r\n        {({ WPM }) => (\r\n          <DetailCard cardDetail={\"wpm\"} scoreUpdatingValue={WPM} />\r\n        )}\r\n      </Detailscontext.Consumer>\r\n      <Detailscontext.Consumer>\r\n        {({ ACCURACY }) => (\r\n          <DetailCard cardDetail={\"accuracy\"} scoreUpdatingValue={ACCURACY} />\r\n        )}\r\n      </Detailscontext.Consumer>\r\n      <div className=\"mt-4\">\r\n        {isSmallerThanlaptop && (\r\n          <Detailscontext.Consumer>\r\n            {({\r\n              USERS_DATA,\r\n              DeleteUserName,\r\n              USER_NAME_FROM_INPUT,\r\n              ChartDataBuilder,\r\n              TIMER_STARTED_BOOLEAN,\r\n            }) => (\r\n              <HistoryBar\r\n                height={\"28rem\"}\r\n                USERS_DATA={USERS_DATA}\r\n                USER_NAME_FROM_INPUT={USER_NAME_FROM_INPUT}\r\n                TIMER_STARTED_BOOLEAN={TIMER_STARTED_BOOLEAN}\r\n                ChartDataBuilder={ChartDataBuilder}\r\n                DeleteUserName={DeleteUserName}\r\n              />\r\n            )}\r\n          </Detailscontext.Consumer>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default DetailsBar;\r\n","import React from \"react\";\r\nimport { animated, useTransition } from \"react-spring\";\r\n\r\nconst TypingInputArea = ({\r\n  wordMatchHandler,\r\n  TYPING_WORD,\r\n  OnKeyPressHandler,\r\n  MODAL_IS_OPEN,\r\n}) => {\r\n  const transitions = useTransition(MODAL_IS_OPEN, {\r\n    from: { opacity: 0, marginTop: 190 },\r\n    enter: { opacity: 1, marginTop: 0 },\r\n    delay: 300,\r\n  });\r\n\r\n  return transitions((styles, MODAL_IS_OPEN) => {\r\n    return (\r\n      !MODAL_IS_OPEN && (\r\n        <div>\r\n          <animated.div>\r\n            <div className=\"flex justify-center mt-12\">\r\n              <animated.input\r\n                placeHolder=\".....start....typing\"\r\n                autoFocus\r\n                style={styles}\r\n                value={TYPING_WORD}\r\n                onKeyPress={(e) => OnKeyPressHandler(e)}\r\n                onChange={wordMatchHandler}\r\n                className=\"shadow-3xl w-3/5 h-12 outline-none p-4 text-center text-2xl font-normal\"\r\n              />\r\n            </div>\r\n          </animated.div>\r\n        </div>\r\n      )\r\n    );\r\n  });\r\n};\r\n\r\nexport default TypingInputArea;\r\n","import React, { useState, useEffect, fragment } from \"react\";\r\nimport {useTransition, animated } from \"react-spring\";\r\n\r\nconst TypingParagraphTextArea = ({\r\n  MODAL_IS_OPEN,\r\n  ACTIVE_PARAGRAPH,\r\n  WORD_INDEX,\r\n  CHARACTER_BOOLEAN,\r\n  WORD_BOOLEANS,\r\n  CHALLENGE_AREA_BOOLEAN,\r\n}) => {\r\n  const [apOnTextArea, setApOnTextArea] = useState(\"\");\r\n\r\n  const transitions = useTransition(MODAL_IS_OPEN, {\r\n    from: { opacity: 0, marginTop: 190, minHeight: \"5px\" },\r\n    enter: { opacity: 1, marginTop: 0, minHeight: \"145px\" },\r\n    delay: 300,\r\n  });\r\n\r\n  useEffect(() => {\r\n    setApOnTextArea(\r\n      ACTIVE_PARAGRAPH.map((word, index) => {\r\n        if (parseInt(word.key) === WORD_INDEX) {\r\n          return (\r\n            <span\r\n              key={index}\r\n              className={\r\n                CHARACTER_BOOLEAN\r\n                  ? \"font-normal bg-green-400 bg-opacity-50 px-1 rounded-md\"\r\n                  : \"font-normal bg-red-600 bg-opacity-60 px-1 rounded-md\"\r\n              }\r\n            >\r\n              {word}\r\n            </span>\r\n          );\r\n        }\r\n        return (\r\n          <span\r\n            key={index}\r\n            className={\r\n              WORD_BOOLEANS[index] === false\r\n                ? \"font-normal px-1 rounded-lg opacity-90  text-red-600\"\r\n                : \"px-1 bg-transparent font-normal\"\r\n            }\r\n          >\r\n            {word}\r\n          </span>\r\n        );\r\n      })\r\n    );\r\n  }, [ACTIVE_PARAGRAPH, WORD_INDEX, CHARACTER_BOOLEAN, WORD_BOOLEANS]);\r\n\r\n  return transitions((styles, MODAL_IS_OPEN) => {\r\n    return (\r\n      !MODAL_IS_OPEN && (\r\n        <div className=\"mt-8\">\r\n          <animated.div\r\n            style={styles}\r\n            className=\"w-full p-4 box-shadow text-2xl resize-none bg-gray-100 leading-normal\"\r\n          >\r\n            {apOnTextArea.length > 1 ? (\r\n              apOnTextArea\r\n            ) : (\r\n              <div>\r\n                <h1 className=\"text-5xl font-normal\">Loading...</h1>\r\n              </div>\r\n            )}\r\n          </animated.div>\r\n        </div>\r\n      )\r\n    );\r\n  });\r\n};\r\n\r\nexport default TypingParagraphTextArea;\r\n","import createContext from \"../lib/Context\"\r\n\r\nconst paragraphContext = createContext()\r\n\r\nexport default paragraphContext;","import React,{useEffect} from \"react\";\r\n\r\nimport { useTransition, animated } from \"react-spring\";\r\n\r\nconst ResultCard = ({ USER_DATA, RESULT_CARD_BOOLEAN }) => {\r\n  const transitions = useTransition(RESULT_CARD_BOOLEAN, {\r\n    from: { opacity: 0, marginLeft: -189 },\r\n    enter: { opacity: 1, marginLeft: 20 },\r\n    leave: { opacity: 0, marginLeft: 789 },\r\n    delay: 200,\r\n  });\r\n\r\n  useEffect(()=>{\r\n    console.log(USER_DATA)\r\n  },[USER_DATA])\r\n\r\n  return transitions((styles, RESULT_CARD_BOOLEAN) => {\r\n    return (\r\n      RESULT_CARD_BOOLEAN && (\r\n        <animated.div\r\n          style={styles}\r\n          className=\"w-80 h-48 mt-8  bg-gray-100 box-shadow\"\r\n        >\r\n          <div className=\"flex gap-2\">\r\n            <div className=\"h-48 w-40 bg-blue-400 flex justify-center flex-col items-center\">\r\n              <span className=\"text-6xl\">{USER_DATA.WPM}</span>\r\n              <span className=\"text-lg\">wpm</span>\r\n            </div>\r\n\r\n            <div className=\"w-60 h-48 flex bg-green-500 flex-col font-semibold justify-around pl-8 text-gray-800 text-lg \">\r\n              <div>\r\n                <span>\r\n                  {USER_DATA.KEY_STROKES} <span>keyStrokes</span>\r\n                </span>\r\n              </div>\r\n\r\n              <div>\r\n                <span>\r\n                  {\" \"}\r\n                  {USER_DATA.CORRECT} <span>correct</span>\r\n                </span>\r\n              </div>\r\n\r\n              <div>\r\n                <span>\r\n                  {\" \"}\r\n                  {USER_DATA.MISSPELLED} <span>misspelled</span>\r\n                </span>\r\n              </div>\r\n              <div>\r\n                <span>\r\n                  {\" \"}\r\n                  {USER_DATA.ACCURACY}% <span>accuracy</span>\r\n                </span>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </animated.div>\r\n      )\r\n    );\r\n  });\r\n};\r\n\r\nexport default ResultCard;\r\n","import React from \"react\";\r\nimport TypingInputArea from \"./TypingInputArea/TypingInputArea\";\r\nimport TypingParagraphTextArea from \"./TypingParagraphTextaArea/TypingParagraphTextArea\";\r\nimport paragraphContext from \"../../../../contexts/paragraphContext\";\r\nimport ResultCard from \"../../../SideBar/Card/DetailCard/ResultCard\";\r\n\r\nconst ChallengeArea = () => {\r\n  return (\r\n    <div>\r\n      <div>\r\n        <paragraphContext.Consumer>\r\n          {({\r\n            ACTIVE_PARAGRAPH,\r\n            WORD_INDEX,\r\n            CHARACTER_BOOLEAN,\r\n            WORD_BOOLEANS,\r\n            CHALLENGE_AREA_BOOLEAN,\r\n            MODAL_IS_OPEN,\r\n          }) => (\r\n            <TypingParagraphTextArea\r\n              MODAL_IS_OPEN={MODAL_IS_OPEN}\r\n              CHALLENGE_AREA_BOOLEAN={CHALLENGE_AREA_BOOLEAN}\r\n              WORD_BOOLEANS={WORD_BOOLEANS}\r\n              CHARACTER_BOOLEAN={CHARACTER_BOOLEAN}\r\n              WORD_INDEX={WORD_INDEX}\r\n              ACTIVE_PARAGRAPH={ACTIVE_PARAGRAPH}\r\n            />\r\n          )}\r\n        </paragraphContext.Consumer>\r\n      </div>\r\n      <div>\r\n        <paragraphContext.Consumer>\r\n          {({\r\n            wordMatchHandler,\r\n            TYPING_WORD,\r\n            OnKeyPressHandler,\r\n            MODAL_IS_OPEN,\r\n          }) => (\r\n            <TypingInputArea\r\n              MODAL_IS_OPEN={MODAL_IS_OPEN}\r\n              wordMatchHandler={wordMatchHandler}\r\n              TYPING_WORD={TYPING_WORD}\r\n              OnKeyPressHandler={OnKeyPressHandler}\r\n            />\r\n          )}\r\n        </paragraphContext.Consumer>\r\n      </div>\r\n      <div className=\" h-52 flex items-center\">\r\n        <paragraphContext.Consumer>\r\n          {({ RESULT_CARD_BOOLEAN, USER_DATA }) => (\r\n            <ResultCard USER_DATA={USER_DATA} RESULT_CARD_BOOLEAN={RESULT_CARD_BOOLEAN} />\r\n          )}\r\n        </paragraphContext.Consumer>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ChallengeArea;\r\n","import React from 'react';\r\n\r\n\r\nconst RestartButton = ({ActiveParaHandler}) => {\r\n    return (\r\n        <div className=\"\">\r\n            <button onClick={ActiveParaHandler} className=\"w-60 h-12 button rounded hover:bg-gray-100 text-2xl\">\r\n                <i className=\"icon sync\"></i>\r\n                Restart \r\n            </button>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default RestartButton;","import React from \"react\";\r\n\r\nconst TimeRemainingInput = ({ TIME_REMAINING, timeRemainingInputHandler }) => {\r\n  return (\r\n    <div>\r\n      <input\r\n        value={TIME_REMAINING}\r\n        onChange={(event) => timeRemainingInputHandler(event)}\r\n        className=\"w-60 input-field hover:bg-gray-100 text-4xl bg-transparent font-bold px-4 h-12 outline-none text-center\"\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TimeRemainingInput;\r\n","import React from 'react';\r\nimport RestartButton from \"./Button/RestartButton\";\r\nimport TimeRemainingInput from \"./Input/TimeRemainingInput\";\r\nimport paragraphContext from \"../../../../contexts/paragraphContext\"\r\n\r\n\r\nconst TypingChalengeHeaderArea = () => {\r\n  return (\r\n    <div className=\"flex justify-between mx-8\">\r\n      <paragraphContext.Consumer>\r\n        {({ TIME_REMAINING, timeRemainingInputHandler }) => (\r\n          <TimeRemainingInput\r\n            timeRemainingInputHandler={timeRemainingInputHandler}\r\n            TIME_REMAINING={TIME_REMAINING}\r\n          />\r\n        )}\r\n      </paragraphContext.Consumer>\r\n\r\n      <paragraphContext.Consumer>\r\n        {({ ActiveParaHandler }) => (\r\n          <RestartButton ActiveParaHandler={ActiveParaHandler} />\r\n        )}\r\n      </paragraphContext.Consumer>\r\n    </div>\r\n  );\r\n};\r\n\r\n\r\nexport default TypingChalengeHeaderArea;","import React from 'react';\r\nimport ChallengeArea from './ChallengeArea/ChallengeArea';\r\nimport TypingChalengeHeaderArea from './TypingChallengeHeaderArea/TypingChallengeHeaderArea'\r\n\r\n\r\n\r\nconst TypingChallenge = () => {\r\n    return (\r\n      <div>\r\n        <TypingChalengeHeaderArea />\r\n        <ChallengeArea />\r\n      </div>\r\n    );\r\n}\r\n\r\nexport default TypingChallenge;","import React from \"react\";\r\nimport Modal from \"react-modal\";\r\nimport { Bar } from \"react-chartjs-2\";\r\n\r\nconst UserChart = ({\r\n  CHART_IS_OPEN,\r\n  MOMENTS_ARRAY,\r\n  CHAR_CODES_ARRAY,\r\n  ChartCloseHandler,\r\n  USER_STAT,\r\n}) => {\r\n  return (\r\n    <Modal\r\n      isOpen={CHART_IS_OPEN}\r\n      className=\"relative glass-blur justify-center items-center  flex  w-full h-full\"\r\n    >\r\n      <button\r\n        className=\"absolute text-red-800 top-3.5 right-8 text-3xl font-semibold\"\r\n        onClick={ChartCloseHandler}\r\n      >\r\n        <i class=\"close icon text-5xl\"></i>\r\n      </button>\r\n      <div className=\"w-5/6 glass h-5/6 bg-gray-50 grid grid-cols-8 shadow-2xl\">\r\n        <div className=\"h-full col-span-6\">\r\n          <Bar\r\n            data={{\r\n              labels: CHAR_CODES_ARRAY,\r\n              datasets: [\r\n                {\r\n                  label: \"Time expense in miliseconds\",\r\n                  data: MOMENTS_ARRAY,\r\n                  backgroundColor: [\r\n                    \"black\",\r\n                    \"rgba(255, 99, 132)\",\r\n                    \"rgba(54, 162, 235)\",\r\n                    \"rgba(255, 206, 86)\",\r\n                    \"rgba(75, 192, 192)\",\r\n                    \"rgba(153, 102, 255)\",\r\n                    \"rgba(255, 159, 64)\",\r\n                  ],\r\n                  borderColor: [\"rgba(255, 206, 86, 1)\"],\r\n                  borderWidth: \"1px\",\r\n                  hoverOffset: 4,\r\n                },\r\n              ],\r\n            }}\r\n            height={400}\r\n            width={600}\r\n            options={{\r\n              maintainAspectRatio: false,\r\n              scales: {\r\n                r: {\r\n                  ticks: {\r\n                    backdropPadding: {\r\n                      x: 10,\r\n                      y: 45,\r\n                    },\r\n                  },\r\n                },\r\n              },\r\n            }}\r\n          />\r\n        </div>\r\n\r\n        <div className=\"col-span-2 flex flex-col justify-center items-center\">\r\n          <div className=\"text-4xl mt-8 font-semibold\">\r\n            per challenge :{\">\"}\r\n          </div>\r\n          <div className=\"text-3xl mt-8 font-semibold\">\r\n            {Math.ceil(USER_STAT.avgWpm)}\r\n          </div>\r\n          <div className=\"text-2xl\">Wpm</div>\r\n          <div className=\"text-3xl mt-4 font-semibold\">\r\n            {parseInt(USER_STAT.avgAccuracy)}\r\n            {\"\"}%\r\n          </div>\r\n          <div className=\"text-2xl\">Accuracy</div>\r\n          <div className=\"text-3xl mt-4 font-semibold\">\r\n            {parseInt(USER_STAT.avgCorrect)}\r\n          </div>\r\n          <div className=\"text-2xl\">Correct</div>\r\n          <div className=\"text-3xl mt-4 font-semibold\">\r\n            {parseInt(USER_STAT.avgMisspelled)}\r\n          </div>\r\n          <div className=\"text-2xl\">Misspelled</div>\r\n          <div className=\"text-3xl mt-4 font-semibold\">\r\n            {parseInt(USER_STAT.avgKeystrokes)}\r\n          </div>\r\n          <div className=\"text-2xl\">Keystrokes</div>\r\n        </div>\r\n      </div>\r\n    </Modal>\r\n  );\r\n};\r\n\r\nexport default UserChart;\r\n","const typingTestData = [\r\n    \"Historically the fundamental role of pharmacists as a healthcare practitioner was to check and distribute drugs to doctors for medication that had been prescribed to patients In more modern times pharmacists advise patients and health care providers on the selection dosages interactions and side effects of medications and act as a learned intermediary between a prescriber and a patient Pharmacists monitor the health and progress of patients to ensure the safe and effective use of medication Pharmacists may practice compounding however many medicines are now produced by pharmaceutical companies in a standard dosage and drug delivery form In some jurisdictions pharmacists have prescriptive authority to either independently prescribe under their own authority or in collaboration with a primary care physician through an agreed upon protocol.\",\r\n    \"A freelancer or freelance worker is a term commonly used for a person who is self-employed and is not necessarily committed to a particular employer long-term Freelance workers are sometimes represented by a company or a temporary agency that resells freelance labor to clients others work independently or use professional associations or websites to get work While the term independent contractor would be used in a higher register of English to designate the tax and employment classes of this type of worker the term freelancing is most common in culture and creative industries and this term specifically motions to participation therein Fields professions and industries where freelancing is predominant include music writing acting computer programming web design graphic design translating and illustrating film and video production and other forms of piece work which some cultural theorists consider as central to the cognitive-cultural economy\",\r\n   \r\n    \"Today historians relate that as a general rule buying and selling securities was very much unorganized before the year Every person who owned a security faced the problem of finding interested buyers who might consider the purchase of a debt-free investment This meant most people were somewhat slow in investing in stocks and bonds because these securities could not readily be converted into money We have been told that an interesting number of traders and merchants agreed to try to do something to help correct the situation At this first crucial meeting they decided that it was a good idea to visit regularly on a daily basis to buy and sell securities The group of leaders whose meeting place was under an old tall cottonwood tree found the needed time to plot the financial future of our nation \",\r\n    \"Being human makes us susceptible to the onset of feelings The role of these emotions varies Some of them are useful while others may be harmful The use of social media for self-expression has reached a point that it makes us feel we can say anything This begins when we see people expressing anything and everything that come to mind When we see everyone else voicing their likes and dislikes their irritations and desires we tend to imitate what they do And because many engage in this we think that it is normal and healthy However when we get used to unbridled self-expression we come to believe that all feelings are valid We become convinced that in real life we should also act on our emotions and our impulses Using social media this way erodes our ability to regulate our actions and reactions To illustrate when something small irritates us we think that it's okay to feel this way But isn't \",\r\n    \"Jim and Anne will be in charge of the spring field day to be held in early June They will ask their friends aid to get set up There will be games for the boys and girls The children will want to hike ride their bikes and swim This yearly event will be held in the new Peach Grove Park Ruth has work to do on the plans for food for the day Last year Ruth spent most of her time helping the two cooks with many snacks Hot dogs fries soft drinks ice cream and candy apples were big sellers Apple pie and ice cream sold well too I hope Ruth serves the same food this year George Long will hire the band and singer for the day A great jazz band will play George mom leads the group \",\r\n    \"If you want to make your paragraph understandable for all the kinds of readers out there you have to make sure that you have written a coherent paragraph It is coherence that makes your paragraph become understandable even for those who are not wide readers You have to ensure that the sentences you write in a paragraph should be able to connect with each other and that it works so well when it would be working as a whole In order to achieve a coherent paragraph you can always make use of the transitional words or phrases that can help you in creating solid bridges from a sentence toward the sentences that follow after it There are transition words that can help you in showing chronological order of things such as first second and third There are transition words that show the spatial relationship of things such as above and below There are also transition words that show logic such as furthermore in addition and in fact Additionally a coherent paragraph is also keen on using a consistent verb tense as well as its point of view\",\r\n    \"The jazz band is sure to be one of the big hits George is to have them play from one to four and also in the evening The fine songs they will play are sure to please all of us Nice gifts will be given to all of the winners in each of the events Local news coverage will include television and newspapers Joyce Scott will take care of the pictures for the school paper and yearbook Maybe the national news will do a short story on the tenth annual spring field day\",\r\n    \"On the very start of your paragraph it should already possess unity and you can do so by making sure that it has and begins with a topic sentence wherein the rest of the paragraph would be able to follow Paragraphs always have this single and central idea that is first expressed in the topic sentence that is also typically expressed in the first sentence of the paragraph The rest of the sentences that follow after the topic sentence should be consistent in supporting the central idea of the entire paragraph to make unify the entire message delivered by a paragraph.In order to write a unified paragraph\",\r\n    \"If you want to make your paragraph understandable for all the kinds of readers out there you have to make sure that you have written a coherent paragraph It is coherence that makes your paragraph become understandable even for those who are not wide readers You have to ensure that the sentences you write in a paragraph should be able to connect with each other and that it works so well when it would be working as a whole In order to achieve a coherent paragraph you can always make use of the transitional words or phrases that can help you in creating solid bridges from a sentence toward the sentences that follow after it There are transition words that can help you in showing chronological order of things such as first second and third  There are transition words that show the spatial relationship of things such as above and below There are also transition words that show logic such as furthermore in addition and in fact Additionally a coherent paragraph is also keen on using a consistent verb tense as well as its point of view\",\r\n    \"Self-confidence is a tricky subject for many people For some it's impossible to feel good about themselves without outside validation When you're in a situation where the people in your life aren't helping you to feel better about yourself this can become a problem in your day to day life Most insecurity stems from feelings of not being attractive or feelings of loneliness If your insecurity doesn't necessarily stem from a lack of interaction but more a lack of feeling attractive there are other options that will help you online Sometimes the best way to put your insecurities to rest can simply be to get an honest opinion There are multiple support groups online where \",\r\n    \"it better to foster one's patience and resilience instead of immediately complaining Or when we develop an attraction to someone despite that person being in a relationship and because social media has conditioned us that all feelings can be expressed we tend to think that acting on this attraction is okay Not all feelings deserve expression We find ourselves creating our own problems when we let our present emotions control our actions you should make sure that you would think about the central theme as well as the points that support it It is critical to give importance to the supporting points because these will be the basis to determine whether your paragraph is unified On the very start of your paragraph it should already possess unity and you can do so by making sure that it has and begins with a topic sentence wherein the rest of the paragraph would be able to follow Paragraphs always have this single and central idea that is first\",\r\n    \"A typical paragraph has three parts the topic sentence the supporting sentence and the concluding sentence The topic sentence is usually the first sentence in a paragraph and it is then followed by the concluding sentences that usually comes in three sentences and finally the concluding sentence which is obviously found on the last part or after the supporting sentence Writing concluding sentences can be optional because if you find that your entire paragraph can do without one it is definitely all right to end your paragraph without a concluding statement It is a rule that you must make sure that the paragraph should always maintain and focus on a single idea One indication of having successfully written an effective paragraph is that\",\r\n    \"it brings the readers on a clear path that leaves no room for detours A typical paragraph has three parts the topic sentence the supporting sentence and the concluding sentence The topic sentence is usually the first sentence in a paragraph and it is then followed by the concluding sentences that usually comes in three sentences and finally the concluding sentence which is obviously found on the last part or after the supporting sentence Writing concluding sentences can be optional because if you find that your entire paragraph can do without one it is definitely all right to end your paragraph without a concluding statement It is a rule that you must make sure that the paragraph should always maintain and focus on a single idea. One indication of having successfully written an effective paragraph is that it brings the readers on a clear path that leaves no room for detours\",\r\n    \"We know from reading the old records that the original team who met together long ago in May became the very first members of the New York Stock Exchange The New York Stock Exchange is still operating Other stock exchanges conduct business in many countries around the world Thousands and thousands of stocks and bonds are bought and sold each day the supporting sentence Writing concluding sentences can be optional because if you find that your entire paragraph can do without one it is definitely all right to end your paragraph without a concluding statement It is a rule that you must make sure that the paragraph should always maintain and focus on a single idea One indication of having successfully written an effective paragraph is that it brings the readers on a clear path that leaves no room for detours\",\r\n    \"expressed in the topic sentence that is also typically expressed in the first sentence of the paragraph The rest of the sentences that follow after the topic sentence should be consistent in supporting the central idea of the entire paragraph to make unify the entire message delivered by a paragraph In order to write a unified paragraph you should make sure that you would think about the central theme as well as the points that support it It is critical to give importance to the supporting points because these will be the basis to determine whether your paragraph is unified\",\r\n    \"you can share a picture of yourself with other members and they will give honest feedback on your appearance In most cases they will point out good qualities that you may have missed in yourself But you can trust them to be honest and many members give very valuable style and posture advice to increase your attractiveness These practical tips and unbiased opinions from supportive strangers will immediately help you feel better about yourself and if the tips are implemented it will also improve your self-esteem in the long-run\"\r\n];\r\n\r\n\r\nexport default typingTestData;","const helperMethods = {\r\n  randomParagraphSelector: (list) => {\r\n    return list[Math.floor(Math.random() * list.length)];\r\n  },\r\n\r\n  paragraphSlicer: (paragraph, SLICER_INDEX) => {\r\n    return [\r\n      paragraph.slice(SLICER_INDEX, SLICER_INDEX + 46),\r\n      SLICER_INDEX + 46,\r\n    ];\r\n  },\r\n\r\n  wordMatchChecker: (firstWord, secondWord) => {\r\n    if (firstWord)\r\n      return (\r\n        firstWord.props.children[0].replace(/\\s+/g, \"\") ===\r\n        secondWord.replace(/\\s+/g, \"\")\r\n      );\r\n\r\n    return false;\r\n  },\r\n\r\n  paragraphArraySetter: (cb_setter, cb_selector, texts) => {\r\n    cb_setter(\r\n      cb_selector(texts)\r\n        .split(\" \")\r\n        .map((word, index) => {\r\n          return (\r\n            <span key={index}>\r\n              {word} {\"\"}\r\n            </span>\r\n          );\r\n        })\r\n    );\r\n  },\r\n\r\n  dataBuilder: ({\r\n    user,\r\n    TIMER_STARTED_BOOLEAN,\r\n    setTIMER_STARTED_BOOLEAN,\r\n    setUSER_STAT,\r\n    setCHAR_CODES_ARRAY,\r\n    setMOMENTS_ARRAY,\r\n    setCHART_IS_OPEN,\r\n    setTIMER_TRACKER_BOOLEAN\r\n  }) => {\r\n\r\n    if(TIMER_STARTED_BOOLEAN) setTIMER_TRACKER_BOOLEAN(true);\r\n    setTIMER_STARTED_BOOLEAN(false);\r\n\r\n    let sumOfAccuracy = 0,\r\n      avgAccuracy,\r\n      sumOfCorrect = 0,\r\n      avgCorrect,\r\n      sumOfKeyStrokes = 0,\r\n      avgKeystrokes,\r\n      sumOfWpm = 0,\r\n      avgWpm,\r\n      sumOfMisspelled = 0,\r\n      avgMisspelled,\r\n      arrayOfCharCodes = [],\r\n      arrayOfAllCharCodes = [],\r\n      avgMomentsArrayOfAllCharCodes = [],\r\n      uniqueCharCodeArray = [],\r\n      momentsArr = [],\r\n      charCodesArr = [];\r\n\r\n    user.userdata.map((datam) => {\r\n      sumOfAccuracy += datam.ACCURACY;\r\n      sumOfCorrect += datam.CORRECT;\r\n      sumOfKeyStrokes += datam.KEY_STROKES;\r\n      sumOfWpm += datam.WPM;\r\n      sumOfMisspelled += datam.MISSPELLED;\r\n      arrayOfCharCodes = [...arrayOfCharCodes, datam.CHAR_CODES];\r\n    });\r\n\r\n    avgAccuracy = sumOfAccuracy / user.userdata.length;\r\n    avgCorrect = sumOfCorrect / user.userdata.length;\r\n    avgMisspelled = sumOfMisspelled / user.userdata.length;\r\n    avgKeystrokes = sumOfKeyStrokes / user.userdata.length;\r\n    avgWpm = sumOfWpm / user.userdata.length;\r\n\r\n    setUSER_STAT({\r\n      avgKeystrokes,\r\n      avgCorrect,\r\n      avgWpm,\r\n      avgMisspelled,\r\n      avgAccuracy,\r\n    });\r\n\r\n    console.log(arrayOfCharCodes);\r\n\r\n    arrayOfCharCodes.map((arr) => {\r\n      arr.map((momentObj) => {\r\n        arrayOfAllCharCodes.push(momentObj);\r\n      });\r\n    });\r\n\r\n    arrayOfAllCharCodes.map((momentObj) => {\r\n      uniqueCharCodeArray.push(momentObj.charCode);\r\n    });\r\n\r\n    uniqueCharCodeArray = [...new Set(uniqueCharCodeArray)];\r\n\r\n    uniqueCharCodeArray.map((charCode) => {\r\n      let sumOfMoments = 0,\r\n        charCounts = 0;\r\n\r\n      arrayOfAllCharCodes.map((momentObj) => {\r\n        if (charCode === momentObj.charCode) {\r\n          charCounts++;\r\n          sumOfMoments += momentObj.moment;\r\n        }\r\n      });\r\n\r\n      avgMomentsArrayOfAllCharCodes.push({\r\n        charCode: charCode,\r\n        avgMoment: Math.ceil(sumOfMoments / charCounts),\r\n      });\r\n    });\r\n\r\n    avgMomentsArrayOfAllCharCodes.sort((a, b) => {\r\n      return a.charCode - b.charCode;\r\n    });\r\n\r\n    avgMomentsArrayOfAllCharCodes.map((momentObj) => {\r\n      momentsArr.push(momentObj.avgMoment);\r\n      if (momentObj.charCode === 32) {\r\n        charCodesArr.push(\"space\");\r\n      } else {\r\n        charCodesArr.push(String.fromCharCode(momentObj.charCode));\r\n      }\r\n    });\r\n    setMOMENTS_ARRAY(momentsArr);\r\n    setCHAR_CODES_ARRAY(charCodesArr);\r\n    setCHART_IS_OPEN(true);\r\n  },\r\n\r\n  deleteUser: (user, cb_users) => {\r\n    let userPermission = prompt(\"To delete your statistics, type 'yes'.\");\r\n    if (userPermission === \"yes\") {\r\n      let prevUsersData = [...JSON.parse(localStorage.getItem(\"usersData\"))];\r\n      let newUsersData = [];\r\n      prevUsersData.map((userObj, index) => {\r\n        if (user.username === userObj.username) {\r\n          return;\r\n        }\r\n        newUsersData.push(userObj);\r\n      });\r\n      cb_users(newUsersData);\r\n      localStorage.setItem(\"usersData\", JSON.stringify(newUsersData));\r\n    }\r\n  },\r\n\r\n  keyPress: (\r\n    match_checker,\r\n    {\r\n      event,\r\n      CORRECT,\r\n      MISSPELLED,\r\n      CHAR_CODES,\r\n      SELECTED_WORD,\r\n      TYPING_WORD,\r\n      WORD_BOOLEANS,\r\n      PREV_MOMENT,\r\n      WORD_INDEX,\r\n      PARAGRAPH_ARRAY,\r\n      setWORD_INDEX,\r\n      ChallengeRestartButtonHandler,\r\n      setMISSPELLED,\r\n      setCORRECT,\r\n      setTYPING_WORD,\r\n      setWORD_BOOLEANS,\r\n      setACCURACY,\r\n      setSELECTED_WORD,\r\n      setKEY_STROKES,\r\n      setTIMER_STARTED_BOOLEAN,\r\n      setCHAR_CODES,\r\n      setPREV_MOMENT,\r\n    }\r\n  ) => {\r\n    setKEY_STROKES((prevStroke, currStroke) => {\r\n      return prevStroke + 1;\r\n    });\r\n\r\n    setTIMER_STARTED_BOOLEAN(true);\r\n\r\n    if (PREV_MOMENT > 1) {\r\n      setCHAR_CODES([\r\n        ...CHAR_CODES,\r\n        {\r\n          moment: new Date().getTime() - PREV_MOMENT,\r\n          charCode: event.charCode,\r\n        },\r\n      ]);\r\n      setPREV_MOMENT(0);\r\n    }\r\n\r\n    setPREV_MOMENT(new Date().getTime());\r\n\r\n    if (event.charCode === 32) {\r\n      setWORD_INDEX((prevIndex, currnetIndex) => prevIndex + 1);\r\n\r\n      setTIMER_STARTED_BOOLEAN(true);\r\n      setTYPING_WORD(\"\");\r\n      setSELECTED_WORD(PARAGRAPH_ARRAY[WORD_INDEX + 1]);\r\n\r\n      setACCURACY((prevAcc, nextAcc) => {\r\n        if (CORRECT > 0) {\r\n          let total = parseInt(MISSPELLED) + parseInt(CORRECT);\r\n\r\n          return Math.ceil((parseInt(CORRECT) / total) * 100);\r\n        } else return 0;\r\n      });\r\n\r\n      let matchingIssues = match_checker(SELECTED_WORD, TYPING_WORD);\r\n\r\n      setWORD_BOOLEANS([...WORD_BOOLEANS, matchingIssues]);\r\n\r\n      if (matchingIssues)\r\n        setCORRECT(\r\n          (prevCorrect, nextCorrect) => (nextCorrect = prevCorrect + 1)\r\n        );\r\n      else\r\n        setMISSPELLED((prevMisspelled, nextMisspelled) => {\r\n          return prevMisspelled + 1;\r\n        });\r\n\r\n      if (PARAGRAPH_ARRAY.length - 2 < WORD_INDEX)\r\n        ChallengeRestartButtonHandler();\r\n    }\r\n  },\r\n\r\n  characterMatch : ({event,SELECTED_WORD,setTYPING_WORD,setCHARACTER_BOOLEAN}) => {\r\n\r\n    setTYPING_WORD(event.target.value);\r\n    if (SELECTED_WORD) {\r\n      let char1 = SELECTED_WORD.props.children[0];\r\n      let char2 = event.target.value.replace(/\\s+/g, \"\");\r\n      if (char2 !== char1.substring(0, char2.length)) {\r\n        setCHARACTER_BOOLEAN(false);\r\n      } else {\r\n        setCHARACTER_BOOLEAN(true);\r\n      }\r\n    }\r\n  }, \r\n  \r\n\r\n  cardMaker : ({\r\n    setRESULT_CARD_BOOLEAN,\r\n    setUSERS_DATA,\r\n    CORRECT,\r\n    KEY_STROKES,\r\n    WPM,\r\n    ACCURACY,\r\n    MISSPELLED,\r\n    USER_NAME_FROM_INPUT,\r\n    setUSER_DATA,\r\n    CHAR_CODES,\r\n    USERS_DATA}) => {   \r\n    setRESULT_CARD_BOOLEAN(true);\r\n\r\n    let newUserBool = true;\r\n    let currentUsersData;\r\n    let usersDataCopied = [...USERS_DATA];\r\n\r\n    if (usersDataCopied.length > 0) {\r\n      currentUsersData = usersDataCopied.map((user, index) => {\r\n        if (user.username === USER_NAME_FROM_INPUT) {\r\n          newUserBool = false;\r\n          user.userdata.push({\r\n            CORRECT,\r\n            KEY_STROKES,\r\n            WPM,\r\n            ACCURACY,\r\n            MISSPELLED,\r\n            CHAR_CODES,\r\n          });\r\n          return user;\r\n        }\r\n        return user;\r\n      });\r\n      setUSERS_DATA(currentUsersData);\r\n    }\r\n\r\n    if (newUserBool) {\r\n      currentUsersData = [\r\n        ...usersDataCopied,\r\n        {\r\n          username: USER_NAME_FROM_INPUT,\r\n          userdata: [\r\n            {\r\n              CORRECT,\r\n              KEY_STROKES,\r\n              WPM,\r\n              ACCURACY,\r\n              MISSPELLED,\r\n              CHAR_CODES,\r\n            },\r\n          ],\r\n        },\r\n      ];\r\n\r\n      setUSERS_DATA(currentUsersData);\r\n    }\r\n\r\n    localStorage.setItem(\"usersData\", JSON.stringify(currentUsersData));\r\n\r\n    setUSER_DATA({\r\n      CORRECT,\r\n      KEY_STROKES,\r\n      WPM,\r\n      ACCURACY,\r\n      MISSPELLED,\r\n    });\r\n  }\r\n};\r\n\r\nexport default helperMethods;\r\n\r\n\r\n","import React, { useState, useEffect } from \"react\";\nimport LoginModal from \"./components/Modal/Modal\";\nimport Header from \"./components/Header/Header\";\nimport DetailsBar from \"./components/SideBar/Bar/DetailBar/DetailBar\";\nimport HistoryBar from \"./components/SideBar/Bar/HistoryBar/HistoryBar\";\nimport TypingChallenge from \"./components/TestContainer/TypingChallenge/TypingChallenge\";\nimport UserChart from \"./components/Chart/UserChart\";\nimport typingTestData from \"./data/exampleText\";\nimport ParagraphContext from \"./contexts/paragraphContext\";\nimport Detailscontext from \"./contexts/detailscontext\";\nimport helperMethods from \"./helper/helper\";\nimport \"./App.css\";\n\nconst App = () => {\n  const [TIMER_STARTED_BOOLEAN, setTIMER_STARTED_BOOLEAN] = useState(false);\n  const [TIMER_TRACKER_BOOLEAN, setTIMER_TRACKER_BOOLEAN] = useState(false);\n  const [CHALLENGE_AREA_BOOLEAN, setCHALLENGE_AREA_BOOLEAN] = useState(true);\n  const [CHARACTER_BOOLEAN, setCHARACTER_BOOLEAN] = useState(true);\n  const [MODAL_IS_OPEN, setMODAL_IS_OPEN] = useState(true);\n  const [RESULT_CARD_BOOLEAN, setRESULT_CARD_BOOLEAN] = useState(false);\n  const [CHART_IS_OPEN, setCHART_IS_OPEN] = useState(false);\n\n  const [TIME_REMAINING, setTIME_REMAINING] = useState(60);\n  const [RECORD_INCREASE, setRECORD_INCREASE] = useState(0);\n\n  const [WPM, setWPM] = useState(0);\n  const [KEY_STROKES, setKEY_STROKES] = useState(0);\n  const [ACCURACY, setACCURACY] = useState(0);\n  const [CORRECT, setCORRECT] = useState(0);\n  const [MISSPELLED, setMISSPELLED] = useState(0);\n  const [PARAGRAPH_ARRAY, setPARAGRAPH_ARRAY] = useState([]);\n  const [ACTIVE_PARAGRAPH, setACTIVE_PARAGRAPH] = useState([]);\n  const [WORD_BOOLEANS, setWORD_BOOLEANS] = useState([]);\n  const [TYPING_WORD, setTYPING_WORD] = useState(\"\");\n  const [WORD_INDEX, setWORD_INDEX] = useState(0);\n  const [SLICER_INDEX, setSLICER_INDEX] = useState(0);\n  const [SELECTED_WORD, setSELECTED_WORD] = useState(\"\");\n  const [USERS_DATA, setUSERS_DATA] = useState([]);\n  const [USER_DATA, setUSER_DATA] = useState({});\n  const [USER_STAT, setUSER_STAT] = useState({});\n  const [USER_NAME_FROM_INPUT, setUSER_NAME_FROM_INPUT] = useState(\"\");\n\n  const [CHAR_CODES, setCHAR_CODES] = useState([]);\n  const [PREV_MOMENT, setPREV_MOMENT] = useState(0);\n  const [MOMENTS_ARRAY, setMOMENTS_ARRAY] = useState([]);\n  const [CHAR_CODES_ARRAY, setCHAR_CODES_ARRAY] = useState([]);\n\n\n  const ChallengeRestartButtonHandler = () => {\n    setCORRECT(0);\n    setACTIVE_PARAGRAPH([]);\n    setTYPING_WORD(\"\");\n    setPARAGRAPH_ARRAY([]);\n    setSLICER_INDEX(0);\n    setSELECTED_WORD(\"\");\n    setWORD_INDEX(0);\n    setTIMER_STARTED_BOOLEAN(false);\n    setTIME_REMAINING(60);\n    setWORD_BOOLEANS([]);\n    setKEY_STROKES(0);\n    setMISSPELLED(0);\n    setWPM(0);\n    setACCURACY(0);\n    setCHAR_CODES([]);\n    setRECORD_INCREASE(0);\n    setCHALLENGE_AREA_BOOLEAN(true);\n    setPREV_MOMENT(0);\n    setTIMER_TRACKER_BOOLEAN(false);\n    helperMethods.paragraphArraySetter(\n      setPARAGRAPH_ARRAY,\n      helperMethods.randomParagraphSelector,\n      typingTestData\n    );\n  };\n\n\n  const ChartDataBuilder = (user) => {\n    helperMethods.dataBuilder({\n      user,\n      TIMER_STARTED_BOOLEAN,\n      setTIMER_STARTED_BOOLEAN,\n      setUSER_STAT,\n      setCHAR_CODES_ARRAY,\n      setMOMENTS_ARRAY,\n      setCHART_IS_OPEN,\n      setTIMER_TRACKER_BOOLEAN\n    });\n  };\n\n\n  const ChartCloseHandler = () => {\n    setCHART_IS_OPEN(false);\n   if(TIMER_TRACKER_BOOLEAN){\n    setTIMER_STARTED_BOOLEAN(true);\n    setTIMER_TRACKER_BOOLEAN(false);\n   } \n  };\n\n\n  const DeleteUserNameHandler = (user) => {\n    helperMethods.deleteUser(user, setUSERS_DATA);\n  };\n\n\n  const StatingParaLoader = () => {\n    helperMethods.paragraphArraySetter(\n      setPARAGRAPH_ARRAY,\n      helperMethods.randomParagraphSelector,\n      typingTestData\n    );\n  };\n\n\n  const OnKeyPressHandler = (event) => {\n    helperMethods.keyPress(helperMethods.wordMatchChecker, {\n      event,\n      CORRECT,\n      CHAR_CODES,\n      SELECTED_WORD,\n      TYPING_WORD,\n      WORD_BOOLEANS,\n      MISSPELLED,\n      PREV_MOMENT,\n      WORD_INDEX,\n      PARAGRAPH_ARRAY,\n      setWORD_INDEX,\n      ChallengeRestartButtonHandler,\n      setMISSPELLED,\n      setCORRECT,\n      setTYPING_WORD,\n      setWORD_BOOLEANS,\n      setACCURACY,\n      setSELECTED_WORD,\n      setKEY_STROKES,\n      setTIMER_STARTED_BOOLEAN,\n      setCHAR_CODES,\n      setPREV_MOMENT,\n    });\n  };\n\n\n  const ActiveParaHandler = () => {\n    ChallengeRestartButtonHandler();\n  };\n\n\n  const activeParagraphLoader = () => {\n    setWORD_BOOLEANS([]);\n    let [slicedParagraph, index] = helperMethods.paragraphSlicer(\n      PARAGRAPH_ARRAY,\n      SLICER_INDEX\n    );\n    setACTIVE_PARAGRAPH(slicedParagraph);\n    setSLICER_INDEX(index);\n  };\n\n\n  const modalHandler = () => {\n    if (USER_NAME_FROM_INPUT !== \"\") setMODAL_IS_OPEN(false);\n  };\n\n\n  const wordMatchHandler = (event) => {\n    helperMethods.characterMatch({\n      event,\n      SELECTED_WORD,\n      setTYPING_WORD,\n      setCHARACTER_BOOLEAN,\n    });\n  };\n\n\n  const timeRemainingInputHandler = (event) => {\n    if (!isNaN(event.target.value) && event.target.value[0] !== \"0\") {\n      setTIME_REMAINING(event.target.value);\n    }\n  };\n\n\n  const counter = () => {\n    setRECORD_INCREASE((prevTime, nextTime) => {\n      return prevTime + 1;\n    });\n    setTIME_REMAINING((prevtime, nexttime) => {\n      return prevtime - 1;\n    });\n  };\n\n\n  const userResultCardCreator = () => {\n    helperMethods.cardMaker({\n      setRESULT_CARD_BOOLEAN,\n      setUSERS_DATA,\n      setUSER_DATA,\n      USER_NAME_FROM_INPUT,\n      CORRECT,\n      KEY_STROKES,\n      WPM,\n      ACCURACY,\n      MISSPELLED,\n      CHAR_CODES,\n      USERS_DATA,\n    });\n  };\n\n\n\n\n  useEffect(() => {\n    setWPM(() => {\n      if (RECORD_INCREASE > 1) {\n        let timeRemainingMinFraction = parseInt(RECORD_INCREASE) / 60;\n        return parseInt(CORRECT ? CORRECT / timeRemainingMinFraction : 0);\n      }\n      return 0;\n    });\n  }, [RECORD_INCREASE]);\n\n\n  \n  useEffect(() => {\n    if (WORD_INDEX % 46 === 0 && WORD_INDEX > 0) {\n      activeParagraphLoader();\n    }\n  }, [WORD_INDEX]);\n\n\n  useEffect(() => {\n    StatingParaLoader();\n  }, []);\n\n\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (TIMER_STARTED_BOOLEAN) {\n        counter();\n      }\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [TIMER_STARTED_BOOLEAN]);\n\n\n  useEffect(() => {\n    if (TIME_REMAINING < 1 && TIME_REMAINING !== \"\") {\n      setTIMER_STARTED_BOOLEAN(false);\n      userResultCardCreator();\n      setRESULT_CARD_BOOLEAN(true);\n      ChallengeRestartButtonHandler();\n      setTIMER_TRACKER_BOOLEAN(false);\n    }\n  }, [TIME_REMAINING]);\n\n\n  useEffect(() => {\n    if (RESULT_CARD_BOOLEAN) {\n      const timeout = setTimeout(() => {\n        setRESULT_CARD_BOOLEAN(false);\n      }, 10000);\n      return () => clearTimeout(timeout);\n    }\n  }, [PARAGRAPH_ARRAY]);\n\n\n  useEffect(() => {\n    setTimeout(() => {\n      setCHALLENGE_AREA_BOOLEAN(false);\n      setSELECTED_WORD(PARAGRAPH_ARRAY[0]);\n      activeParagraphLoader();\n      if (localStorage.getItem(\"usersData\"))\n        setUSERS_DATA(JSON.parse(localStorage.getItem(\"usersData\")));\n      else localStorage.setItem(\"usersData\", JSON.stringify(USERS_DATA));\n    }, 700);\n  }, [PARAGRAPH_ARRAY]);\n\n\n  return (\n    <div className=\"h-screen font-serif\">\n      <LoginModal\n        MODAL_IS_OPEN={MODAL_IS_OPEN}\n        setUSER_NAME_FROM_INPUT={setUSER_NAME_FROM_INPUT}\n        modalHandler={modalHandler}\n      />\n\n      <div>\n        <Header userName={USER_NAME_FROM_INPUT} />\n      </div>\n\n      <div\n        style={{ backGround: \"#F3F2EF\" }}\n        className=\"grid grid-cols-8 gap-2 bgwhite  mx-4 p-4 mt-8 challengeArea\"\n      >\n        <UserChart\n          USER_STAT={USER_STAT}\n          MOMENTS_ARRAY={MOMENTS_ARRAY}\n          CHAR_CODES_ARRAY={CHAR_CODES_ARRAY}\n          CHART_IS_OPEN={CHART_IS_OPEN}\n          ChartCloseHandler={ChartCloseHandler}\n        />\n\n        <div className=\"col-span-2 lg:col-span-1 p-0 bg-transparent \">\n          <Detailscontext.Provider\n            value={{\n              CORRECT,\n              KEY_STROKES,\n              MISSPELLED,\n              WPM,\n              ACCURACY,\n              USER_DATA,\n              USERS_DATA,\n              DeleteUserNameHandler,\n              USER_NAME_FROM_INPUT,\n              ChartDataBuilder,\n              TIMER_STARTED_BOOLEAN,\n            }}\n          >\n            <DetailsBar />\n          </Detailscontext.Provider>\n        </div>\n\n        <div className=\"col-span-6 lg:col-span-5  bg-green-500  pt-8 \">\n          <ParagraphContext.Provider\n            value={{\n              OnKeyPressHandler,\n              TYPING_WORD,\n              wordMatchHandler,\n              ACTIVE_PARAGRAPH,\n              ActiveParaHandler,\n              WORD_INDEX,\n              TIME_REMAINING,\n              timeRemainingInputHandler,\n              CHARACTER_BOOLEAN,\n              WORD_BOOLEANS,\n              SELECTED_WORD,\n              CHALLENGE_AREA_BOOLEAN,\n              ACCURACY,\n              MODAL_IS_OPEN,\n              USER_DATA,\n              RESULT_CARD_BOOLEAN,\n            }}\n          >\n            <TypingChallenge />\n          </ParagraphContext.Provider>\n        </div>\n\n        <div className=\"hidden lg:block lg:col-span-2 p-8 bg-transparent\">\n          <HistoryBar\n            ChartDataBuilder={ChartDataBuilder}\n            USERS_DATA={USERS_DATA}\n            USER_NAME_FROM_INPUT={USER_NAME_FROM_INPUT}\n            TIMER_STARTED_BOOLEAN={TIMER_STARTED_BOOLEAN}\n            DeleteUserNameHandler={DeleteUserNameHandler}\n            height={\"43rem\"}\n          />\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport \"./index.css\"\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n "],"sourceRoot":""}