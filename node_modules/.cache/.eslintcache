[{"C:\\Users\\anird\\Desktop\\desktop\\phantom-typer\\phantomtyper_1.0\\src\\index.js":"1","C:\\Users\\anird\\Desktop\\desktop\\phantom-typer\\phantomtyper_1.0\\src\\App.js":"2","C:\\Users\\anird\\Desktop\\desktop\\phantom-typer\\phantomtyper_1.0\\src\\contexts\\paragraphContext.js":"3","C:\\Users\\anird\\Desktop\\desktop\\phantom-typer\\phantomtyper_1.0\\src\\helper\\helper.js":"4","C:\\Users\\anird\\Desktop\\desktop\\phantom-typer\\phantomtyper_1.0\\src\\data\\exampleText.js":"5","C:\\Users\\anird\\Desktop\\desktop\\phantom-typer\\phantomtyper_1.0\\src\\contexts\\detailscontext.js":"6","C:\\Users\\anird\\Desktop\\desktop\\phantom-typer\\phantomtyper_1.0\\src\\components\\Header\\Header.js":"7","C:\\Users\\anird\\Desktop\\desktop\\phantom-typer\\phantomtyper_1.0\\src\\components\\Modal\\Modal.js":"8","C:\\Users\\anird\\Desktop\\desktop\\phantom-typer\\phantomtyper_1.0\\src\\components\\TestContainer\\TypingChallenge\\TypingChallenge.js":"9","C:\\Users\\anird\\Desktop\\desktop\\phantom-typer\\phantomtyper_1.0\\src\\components\\Chart\\UserChart.js":"10","C:\\Users\\anird\\Desktop\\desktop\\phantom-typer\\phantomtyper_1.0\\src\\components\\SideBar\\Bar\\DetailBar\\DetailBar.js":"11","C:\\Users\\anird\\Desktop\\desktop\\phantom-typer\\phantomtyper_1.0\\src\\components\\SideBar\\Bar\\HistoryBar\\HistoryBar.js":"12","C:\\Users\\anird\\Desktop\\desktop\\phantom-typer\\phantomtyper_1.0\\src\\lib\\Context.js":"13","C:\\Users\\anird\\Desktop\\desktop\\phantom-typer\\phantomtyper_1.0\\src\\components\\TestContainer\\TypingChallenge\\TypingChallengeHeaderArea\\TypingChallengeHeaderArea.js":"14","C:\\Users\\anird\\Desktop\\desktop\\phantom-typer\\phantomtyper_1.0\\src\\components\\TestContainer\\TypingChallenge\\ChallengeArea\\ChallengeArea.js":"15","C:\\Users\\anird\\Desktop\\desktop\\phantom-typer\\phantomtyper_1.0\\src\\components\\SideBar\\Card\\HistoryCard\\Statistics.js":"16","C:\\Users\\anird\\Desktop\\desktop\\phantom-typer\\phantomtyper_1.0\\src\\components\\SideBar\\Card\\DetailCard\\DetailCard.js":"17","C:\\Users\\anird\\Desktop\\desktop\\phantom-typer\\phantomtyper_1.0\\src\\components\\SideBar\\Card\\DetailCard\\ResultCard.js":"18","C:\\Users\\anird\\Desktop\\desktop\\phantom-typer\\phantomtyper_1.0\\src\\components\\TestContainer\\TypingChallenge\\TypingChallengeHeaderArea\\Button\\RestartButton.js":"19","C:\\Users\\anird\\Desktop\\desktop\\phantom-typer\\phantomtyper_1.0\\src\\components\\TestContainer\\TypingChallenge\\TypingChallengeHeaderArea\\Input\\TimeRemainingInput.js":"20","C:\\Users\\anird\\Desktop\\desktop\\phantom-typer\\phantomtyper_1.0\\src\\components\\TestContainer\\TypingChallenge\\ChallengeArea\\TypingInputArea\\TypingInputArea.js":"21","C:\\Users\\anird\\Desktop\\desktop\\phantom-typer\\phantomtyper_1.0\\src\\components\\TestContainer\\TypingChallenge\\ChallengeArea\\TypingParagraphTextaArea\\TypingParagraphTextArea.js":"22"},{"size":232,"mtime":1681236863783,"results":"23","hashOfConfig":"24"},{"size":10138,"mtime":1681499895904,"results":"25","hashOfConfig":"24"},{"size":122,"mtime":1681236863778,"results":"26","hashOfConfig":"24"},{"size":8031,"mtime":1681236863781,"results":"27","hashOfConfig":"24"},{"size":12739,"mtime":1681236863780,"results":"28","hashOfConfig":"24"},{"size":118,"mtime":1681236863777,"results":"29","hashOfConfig":"24"},{"size":974,"mtime":1681497201371,"results":"30","hashOfConfig":"24"},{"size":1141,"mtime":1681499634755,"results":"31","hashOfConfig":"24"},{"size":371,"mtime":1681236863768,"results":"32","hashOfConfig":"24"},{"size":3049,"mtime":1681236863755,"results":"33","hashOfConfig":"24"},{"size":1754,"mtime":1681498282588,"results":"34","hashOfConfig":"24"},{"size":1272,"mtime":1681236863759,"results":"35","hashOfConfig":"24"},{"size":484,"mtime":1681236863784,"results":"36","hashOfConfig":"24"},{"size":893,"mtime":1681497831892,"results":"37","hashOfConfig":"24"},{"size":1919,"mtime":1681236863765,"results":"38","hashOfConfig":"24"},{"size":2440,"mtime":1681499302656,"results":"39","hashOfConfig":"24"},{"size":445,"mtime":1681499787484,"results":"40","hashOfConfig":"24"},{"size":39433,"mtime":1681498319402,"results":"41","hashOfConfig":"24"},{"size":459,"mtime":1681498840435,"results":"42","hashOfConfig":"24"},{"size":431,"mtime":1681498686692,"results":"43","hashOfConfig":"24"},{"size":1109,"mtime":1681498981707,"results":"44","hashOfConfig":"24"},{"size":2099,"mtime":1681498423220,"results":"45","hashOfConfig":"24"},{"filePath":"46","messages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},"1xc880z",{"filePath":"49","messages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"53","messages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"48"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"66","messages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"48"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"75","messages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"48"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"C:\\Users\\anird\\Desktop\\desktop\\phantom-typer\\phantomtyper_1.0\\src\\index.js",[],["93","94"],"C:\\Users\\anird\\Desktop\\desktop\\phantom-typer\\phantomtyper_1.0\\src\\App.js",["95","96","97","98","99"],"C:\\Users\\anird\\Desktop\\desktop\\phantom-typer\\phantomtyper_1.0\\src\\contexts\\paragraphContext.js",[],"C:\\Users\\anird\\Desktop\\desktop\\phantom-typer\\phantomtyper_1.0\\src\\helper\\helper.js",["100","101","102","103","104","105","106","107","108"],"const helperMethods = {\r\n  randomParagraphSelector: (list) => {\r\n    return list[Math.floor(Math.random() * list.length)];\r\n  },\r\n\r\n  paragraphSlicer: (paragraph, SLICER_INDEX) => {\r\n    return [\r\n      paragraph.slice(SLICER_INDEX, SLICER_INDEX + 46),\r\n      SLICER_INDEX + 46,\r\n    ];\r\n  },\r\n\r\n  wordMatchChecker: (firstWord, secondWord) => {\r\n    if (firstWord)\r\n      return (\r\n        firstWord.props.children[0].replace(/\\s+/g, \"\") ===\r\n        secondWord.replace(/\\s+/g, \"\")\r\n      );\r\n\r\n    return false;\r\n  },\r\n\r\n  paragraphArraySetter: (cb_setter, cb_selector, texts) => {\r\n    cb_setter(\r\n      cb_selector(texts)\r\n        .split(\" \")\r\n        .map((word, index) => {\r\n          return (\r\n            <span key={index}>\r\n              {word} {\"\"}\r\n            </span>\r\n          );\r\n        })\r\n    );\r\n  },\r\n\r\n  dataBuilder: ({\r\n    user,\r\n    TIMER_STARTED_BOOLEAN,\r\n    setTIMER_STARTED_BOOLEAN,\r\n    setUSER_STAT,\r\n    setCHAR_CODES_ARRAY,\r\n    setMOMENTS_ARRAY,\r\n    setCHART_IS_OPEN,\r\n    setTIMER_TRACKER_BOOLEAN\r\n  }) => {\r\n\r\n    if(TIMER_STARTED_BOOLEAN) setTIMER_TRACKER_BOOLEAN(true);\r\n    setTIMER_STARTED_BOOLEAN(false);\r\n\r\n    let sumOfAccuracy = 0,\r\n      avgAccuracy,\r\n      sumOfCorrect = 0,\r\n      avgCorrect,\r\n      sumOfKeyStrokes = 0,\r\n      avgKeystrokes,\r\n      sumOfWpm = 0,\r\n      avgWpm,\r\n      sumOfMisspelled = 0,\r\n      avgMisspelled,\r\n      arrayOfCharCodes = [],\r\n      arrayOfAllCharCodes = [],\r\n      avgMomentsArrayOfAllCharCodes = [],\r\n      uniqueCharCodeArray = [],\r\n      momentsArr = [],\r\n      charCodesArr = [];\r\n\r\n    user.userdata.map((datam) => {\r\n      sumOfAccuracy += datam.ACCURACY;\r\n      sumOfCorrect += datam.CORRECT;\r\n      sumOfKeyStrokes += datam.KEY_STROKES;\r\n      sumOfWpm += datam.WPM;\r\n      sumOfMisspelled += datam.MISSPELLED;\r\n      arrayOfCharCodes = [...arrayOfCharCodes, datam.CHAR_CODES];\r\n    });\r\n\r\n    avgAccuracy = sumOfAccuracy / user.userdata.length;\r\n    avgCorrect = sumOfCorrect / user.userdata.length;\r\n    avgMisspelled = sumOfMisspelled / user.userdata.length;\r\n    avgKeystrokes = sumOfKeyStrokes / user.userdata.length;\r\n    avgWpm = sumOfWpm / user.userdata.length;\r\n\r\n    setUSER_STAT({\r\n      avgKeystrokes,\r\n      avgCorrect,\r\n      avgWpm,\r\n      avgMisspelled,\r\n      avgAccuracy,\r\n    });\r\n\r\n    console.log(arrayOfCharCodes);\r\n\r\n    arrayOfCharCodes.map((arr) => {\r\n      arr.map((momentObj) => {\r\n        arrayOfAllCharCodes.push(momentObj);\r\n      });\r\n    });\r\n\r\n    arrayOfAllCharCodes.map((momentObj) => {\r\n      uniqueCharCodeArray.push(momentObj.charCode);\r\n    });\r\n\r\n    uniqueCharCodeArray = [...new Set(uniqueCharCodeArray)];\r\n\r\n    uniqueCharCodeArray.map((charCode) => {\r\n      let sumOfMoments = 0,\r\n        charCounts = 0;\r\n\r\n      arrayOfAllCharCodes.map((momentObj) => {\r\n        if (charCode === momentObj.charCode) {\r\n          charCounts++;\r\n          sumOfMoments += momentObj.moment;\r\n        }\r\n      });\r\n\r\n      avgMomentsArrayOfAllCharCodes.push({\r\n        charCode: charCode,\r\n        avgMoment: Math.ceil(sumOfMoments / charCounts),\r\n      });\r\n    });\r\n\r\n    avgMomentsArrayOfAllCharCodes.sort((a, b) => {\r\n      return a.charCode - b.charCode;\r\n    });\r\n\r\n    avgMomentsArrayOfAllCharCodes.map((momentObj) => {\r\n      momentsArr.push(momentObj.avgMoment);\r\n      if (momentObj.charCode === 32) {\r\n        charCodesArr.push(\"space\");\r\n      } else {\r\n        charCodesArr.push(String.fromCharCode(momentObj.charCode));\r\n      }\r\n    });\r\n    setMOMENTS_ARRAY(momentsArr);\r\n    setCHAR_CODES_ARRAY(charCodesArr);\r\n    setCHART_IS_OPEN(true);\r\n  },\r\n\r\n  deleteUser: (user, cb_users) => {\r\n    let userPermission = prompt(\"To delete your statistics, type 'yes'.\");\r\n    if (userPermission === \"yes\") {\r\n      let prevUsersData = [...JSON.parse(localStorage.getItem(\"usersData\"))];\r\n      let newUsersData = [];\r\n      prevUsersData.map((userObj, index) => {\r\n        if (user.username === userObj.username) {\r\n          return;\r\n        }\r\n        newUsersData.push(userObj);\r\n      });\r\n      cb_users(newUsersData);\r\n      localStorage.setItem(\"usersData\", JSON.stringify(newUsersData));\r\n    }\r\n  },\r\n\r\n  keyPress: (\r\n    match_checker,\r\n    {\r\n      event,\r\n      CORRECT,\r\n      MISSPELLED,\r\n      CHAR_CODES,\r\n      SELECTED_WORD,\r\n      TYPING_WORD,\r\n      WORD_BOOLEANS,\r\n      PREV_MOMENT,\r\n      WORD_INDEX,\r\n      PARAGRAPH_ARRAY,\r\n      setWORD_INDEX,\r\n      ChallengeRestartButtonHandler,\r\n      setMISSPELLED,\r\n      setCORRECT,\r\n      setTYPING_WORD,\r\n      setWORD_BOOLEANS,\r\n      setACCURACY,\r\n      setSELECTED_WORD,\r\n      setKEY_STROKES,\r\n      setTIMER_STARTED_BOOLEAN,\r\n      setCHAR_CODES,\r\n      setPREV_MOMENT,\r\n    }\r\n  ) => {\r\n    setKEY_STROKES((prevStroke, currStroke) => {\r\n      return prevStroke + 1;\r\n    });\r\n\r\n    setTIMER_STARTED_BOOLEAN(true);\r\n\r\n    if (PREV_MOMENT > 1) {\r\n      setCHAR_CODES([\r\n        ...CHAR_CODES,\r\n        {\r\n          moment: new Date().getTime() - PREV_MOMENT,\r\n          charCode: event.charCode,\r\n        },\r\n      ]);\r\n      setPREV_MOMENT(0);\r\n    }\r\n\r\n    setPREV_MOMENT(new Date().getTime());\r\n\r\n    if (event.charCode === 32) {\r\n      setWORD_INDEX((prevIndex, currnetIndex) => prevIndex + 1);\r\n\r\n      setTIMER_STARTED_BOOLEAN(true);\r\n      setTYPING_WORD(\"\");\r\n      setSELECTED_WORD(PARAGRAPH_ARRAY[WORD_INDEX + 1]);\r\n\r\n      setACCURACY((prevAcc, nextAcc) => {\r\n        if (CORRECT > 0) {\r\n          let total = parseInt(MISSPELLED) + parseInt(CORRECT);\r\n\r\n          return Math.ceil((parseInt(CORRECT) / total) * 100);\r\n        } else return 0;\r\n      });\r\n\r\n      let matchingIssues = match_checker(SELECTED_WORD, TYPING_WORD);\r\n\r\n      setWORD_BOOLEANS([...WORD_BOOLEANS, matchingIssues]);\r\n\r\n      if (matchingIssues)\r\n        setCORRECT(\r\n          (prevCorrect, nextCorrect) => (nextCorrect = prevCorrect + 1)\r\n        );\r\n      else\r\n        setMISSPELLED((prevMisspelled, nextMisspelled) => {\r\n          return prevMisspelled + 1;\r\n        });\r\n\r\n      if (PARAGRAPH_ARRAY.length - 2 < WORD_INDEX)\r\n        ChallengeRestartButtonHandler();\r\n    }\r\n  },\r\n\r\n  characterMatch : ({event,SELECTED_WORD,setTYPING_WORD,setCHARACTER_BOOLEAN}) => {\r\n\r\n    setTYPING_WORD(event.target.value);\r\n    if (SELECTED_WORD) {\r\n      let char1 = SELECTED_WORD.props.children[0];\r\n      let char2 = event.target.value.replace(/\\s+/g, \"\");\r\n      if (char2 !== char1.substring(0, char2.length)) {\r\n        setCHARACTER_BOOLEAN(false);\r\n      } else {\r\n        setCHARACTER_BOOLEAN(true);\r\n      }\r\n    }\r\n  }, \r\n  \r\n\r\n  cardMaker : ({\r\n    setRESULT_CARD_BOOLEAN,\r\n    setUSERS_DATA,\r\n    CORRECT,\r\n    KEY_STROKES,\r\n    WPM,\r\n    ACCURACY,\r\n    MISSPELLED,\r\n    USER_NAME_FROM_INPUT,\r\n    setUSER_DATA,\r\n    CHAR_CODES,\r\n    USERS_DATA}) => {   \r\n    setRESULT_CARD_BOOLEAN(true);\r\n\r\n    let newUserBool = true;\r\n    let currentUsersData;\r\n    let usersDataCopied = [...USERS_DATA];\r\n\r\n    if (usersDataCopied.length > 0) {\r\n      currentUsersData = usersDataCopied.map((user, index) => {\r\n        if (user.username === USER_NAME_FROM_INPUT) {\r\n          newUserBool = false;\r\n          user.userdata.push({\r\n            CORRECT,\r\n            KEY_STROKES,\r\n            WPM,\r\n            ACCURACY,\r\n            MISSPELLED,\r\n            CHAR_CODES,\r\n          });\r\n          return user;\r\n        }\r\n        return user;\r\n      });\r\n      setUSERS_DATA(currentUsersData);\r\n    }\r\n\r\n    if (newUserBool) {\r\n      currentUsersData = [\r\n        ...usersDataCopied,\r\n        {\r\n          username: USER_NAME_FROM_INPUT,\r\n          userdata: [\r\n            {\r\n              CORRECT,\r\n              KEY_STROKES,\r\n              WPM,\r\n              ACCURACY,\r\n              MISSPELLED,\r\n              CHAR_CODES,\r\n            },\r\n          ],\r\n        },\r\n      ];\r\n\r\n      setUSERS_DATA(currentUsersData);\r\n    }\r\n\r\n    localStorage.setItem(\"usersData\", JSON.stringify(currentUsersData));\r\n\r\n    setUSER_DATA({\r\n      CORRECT,\r\n      KEY_STROKES,\r\n      WPM,\r\n      ACCURACY,\r\n      MISSPELLED,\r\n    });\r\n  }\r\n};\r\n\r\nexport default helperMethods;\r\n\r\n\r\n","C:\\Users\\anird\\Desktop\\desktop\\phantom-typer\\phantomtyper_1.0\\src\\data\\exampleText.js",[],"C:\\Users\\anird\\Desktop\\desktop\\phantom-typer\\phantomtyper_1.0\\src\\contexts\\detailscontext.js",[],"C:\\Users\\anird\\Desktop\\desktop\\phantom-typer\\phantomtyper_1.0\\src\\components\\Header\\Header.js",[],"C:\\Users\\anird\\Desktop\\desktop\\phantom-typer\\phantomtyper_1.0\\src\\components\\Modal\\Modal.js",[],"C:\\Users\\anird\\Desktop\\desktop\\phantom-typer\\phantomtyper_1.0\\src\\components\\TestContainer\\TypingChallenge\\TypingChallenge.js",[],"C:\\Users\\anird\\Desktop\\desktop\\phantom-typer\\phantomtyper_1.0\\src\\components\\Chart\\UserChart.js",[],"C:\\Users\\anird\\Desktop\\desktop\\phantom-typer\\phantomtyper_1.0\\src\\components\\SideBar\\Bar\\DetailBar\\DetailBar.js",[],"C:\\Users\\anird\\Desktop\\desktop\\phantom-typer\\phantomtyper_1.0\\src\\components\\SideBar\\Bar\\HistoryBar\\HistoryBar.js",["109","110","111"],"import React, { useState, useEffect } from \"react\";\r\nimport Statistics from \"../../Card/HistoryCard/Statistics\";\r\n\r\nconst HistoryBar = ({\r\n  height,\r\n  USERS_DATA,\r\n  DeleteUserNameHandler,\r\n  USER_NAME_FROM_INPUT,\r\n  chartInfos,\r\n  ChartDataBuilder,\r\n  TIMER_STARTED_BOOLEAN,\r\n}) => {\r\n  return (\r\n    <div>\r\n      {USERS_DATA.length > 0 ? (\r\n        <div style={{ maxHeight: height }} className=\" overflow-y-scroll\">\r\n          {USERS_DATA?.map((user) => (\r\n            <Statistics\r\n              key={user.username}\r\n              DeleteUserNameHandler={DeleteUserNameHandler}\r\n              TIMER_STARTED_BOOLEAN={TIMER_STARTED_BOOLEAN}\r\n              ChartDataBuilder={ChartDataBuilder}\r\n              key={user.username}\r\n              chartInfos={chartInfos}\r\n              user={user}\r\n              USER_NAME_FROM_INPUT={USER_NAME_FROM_INPUT}\r\n            />\r\n          ))}\r\n        </div>\r\n      ) : (\r\n        <div\r\n          style={{ maxHeight: \"45rem\" }}\r\n          className=\"flex font-semibold justify-center items-center mt-32\"\r\n        >\r\n          <span className=\"text-2xl\">\r\n            {\" \"}\r\n            your typing performance statistics will be here\r\n          </span>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default HistoryBar;\r\n","C:\\Users\\anird\\Desktop\\desktop\\phantom-typer\\phantomtyper_1.0\\src\\lib\\Context.js",[],"C:\\Users\\anird\\Desktop\\desktop\\phantom-typer\\phantomtyper_1.0\\src\\components\\TestContainer\\TypingChallenge\\TypingChallengeHeaderArea\\TypingChallengeHeaderArea.js",[],"C:\\Users\\anird\\Desktop\\desktop\\phantom-typer\\phantomtyper_1.0\\src\\components\\TestContainer\\TypingChallenge\\ChallengeArea\\ChallengeArea.js",[],"C:\\Users\\anird\\Desktop\\desktop\\phantom-typer\\phantomtyper_1.0\\src\\components\\SideBar\\Card\\HistoryCard\\Statistics.js",["112","113"],"C:\\Users\\anird\\Desktop\\desktop\\phantom-typer\\phantomtyper_1.0\\src\\components\\SideBar\\Card\\DetailCard\\DetailCard.js",[],"C:\\Users\\anird\\Desktop\\desktop\\phantom-typer\\phantomtyper_1.0\\src\\components\\SideBar\\Card\\DetailCard\\ResultCard.js",[],"C:\\Users\\anird\\Desktop\\desktop\\phantom-typer\\phantomtyper_1.0\\src\\components\\TestContainer\\TypingChallenge\\TypingChallengeHeaderArea\\Button\\RestartButton.js",[],"C:\\Users\\anird\\Desktop\\desktop\\phantom-typer\\phantomtyper_1.0\\src\\components\\TestContainer\\TypingChallenge\\TypingChallengeHeaderArea\\Input\\TimeRemainingInput.js",[],"C:\\Users\\anird\\Desktop\\desktop\\phantom-typer\\phantomtyper_1.0\\src\\components\\TestContainer\\TypingChallenge\\ChallengeArea\\TypingInputArea\\TypingInputArea.js",[],"C:\\Users\\anird\\Desktop\\desktop\\phantom-typer\\phantomtyper_1.0\\src\\components\\TestContainer\\TypingChallenge\\ChallengeArea\\TypingParagraphTextaArea\\TypingParagraphTextArea.js",["114"],{"ruleId":"115","replacedBy":"116"},{"ruleId":"117","replacedBy":"118"},{"ruleId":"119","severity":1,"message":"120","line":218,"column":6,"nodeType":"121","endLine":218,"endColumn":23,"suggestions":"122"},{"ruleId":"119","severity":1,"message":"123","line":226,"column":6,"nodeType":"121","endLine":226,"endColumn":18,"suggestions":"124"},{"ruleId":"119","severity":1,"message":"125","line":252,"column":6,"nodeType":"121","endLine":252,"endColumn":22,"suggestions":"126"},{"ruleId":"119","severity":1,"message":"127","line":262,"column":6,"nodeType":"121","endLine":262,"endColumn":23,"suggestions":"128"},{"ruleId":"119","severity":1,"message":"129","line":274,"column":6,"nodeType":"121","endLine":274,"endColumn":23,"suggestions":"130"},{"ruleId":"131","severity":1,"message":"132","line":68,"column":31,"nodeType":"133","messageId":"134","endLine":68,"endColumn":33},{"ruleId":"131","severity":1,"message":"132","line":93,"column":32,"nodeType":"133","messageId":"134","endLine":93,"endColumn":34},{"ruleId":"131","severity":1,"message":"132","line":94,"column":27,"nodeType":"133","messageId":"134","endLine":94,"endColumn":29},{"ruleId":"131","severity":1,"message":"132","line":99,"column":41,"nodeType":"133","messageId":"134","endLine":99,"endColumn":43},{"ruleId":"131","severity":1,"message":"132","line":105,"column":40,"nodeType":"133","messageId":"134","endLine":105,"endColumn":42},{"ruleId":"131","severity":1,"message":"132","line":109,"column":43,"nodeType":"133","messageId":"134","endLine":109,"endColumn":45},{"ruleId":"131","severity":1,"message":"132","line":126,"column":51,"nodeType":"133","messageId":"134","endLine":126,"endColumn":53},{"ruleId":"131","severity":1,"message":"135","line":144,"column":42,"nodeType":"133","messageId":"136","endLine":144,"endColumn":44},{"ruleId":"131","severity":1,"message":"132","line":146,"column":11,"nodeType":"137","messageId":"138","endLine":146,"endColumn":18},{"ruleId":"139","severity":1,"message":"140","line":1,"column":17,"nodeType":"141","messageId":"142","endLine":1,"endColumn":25},{"ruleId":"139","severity":1,"message":"143","line":1,"column":27,"nodeType":"141","messageId":"142","endLine":1,"endColumn":36},{"ruleId":"144","severity":1,"message":"145","line":23,"column":15,"nodeType":"146","messageId":"147","endLine":23,"endColumn":34},{"ruleId":"131","severity":1,"message":"132","line":19,"column":31,"nodeType":"133","messageId":"134","endLine":19,"endColumn":33},{"ruleId":"119","severity":1,"message":"148","line":33,"column":6,"nodeType":"121","endLine":33,"endColumn":29,"suggestions":"149"},{"ruleId":"139","severity":1,"message":"150","line":1,"column":38,"nodeType":"141","messageId":"142","endLine":1,"endColumn":46},"no-native-reassign",["151"],"no-negated-in-lhs",["152"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'CORRECT'. Either include it or remove the dependency array. You can also replace multiple useState variables with useReducer if 'setWPM' needs the current value of 'CORRECT'.","ArrayExpression",["153"],"React Hook useEffect has a missing dependency: 'activeParagraphLoader'. Either include it or remove the dependency array.",["154"],"React Hook useEffect has a missing dependency: 'userResultCardCreator'. Either include it or remove the dependency array.",["155"],"React Hook useEffect has a missing dependency: 'RESULT_CARD_BOOLEAN'. Either include it or remove the dependency array.",["156"],"React Hook useEffect has missing dependencies: 'USERS_DATA' and 'activeParagraphLoader'. Either include them or remove the dependency array.",["157"],"array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","Array.prototype.map() expects a value to be returned at the end of arrow function.","expectedAtEnd","ReturnStatement","expectedReturnValue","no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","noDuplicateProps","React Hook useEffect has a missing dependency: 'user.userdata'. Either include it or remove the dependency array.",["158"],"'fragment' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"159","fix":"160"},{"desc":"161","fix":"162"},{"desc":"163","fix":"164"},{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},{"desc":"169","fix":"170"},"Update the dependencies array to be: [CORRECT, RECORD_INCREASE]",{"range":"171","text":"172"},"Update the dependencies array to be: [WORD_INDEX, activeParagraphLoader]",{"range":"173","text":"174"},"Update the dependencies array to be: [TIME_REMAINING, userResultCardCreator]",{"range":"175","text":"176"},"Update the dependencies array to be: [PARAGRAPH_ARRAY, RESULT_CARD_BOOLEAN]",{"range":"177","text":"178"},"Update the dependencies array to be: [PARAGRAPH_ARRAY, USERS_DATA, activeParagraphLoader]",{"range":"179","text":"180"},"Update the dependencies array to be: [TIMER_STARTED_BOOLEAN, user.userdata]",{"range":"181","text":"182"},[6183,6200],"[CORRECT, RECORD_INCREASE]",[6327,6339],"[WORD_INDEX, activeParagraphLoader]",[6909,6925],"[TIME_REMAINING, userResultCardCreator]",[7141,7158],"[PARAGRAPH_ARRAY, RESULT_CARD_BOOLEAN]",[7540,7557],"[PARAGRAPH_ARRAY, USERS_DATA, activeParagraphLoader]",[745,768],"[TIMER_STARTED_BOOLEAN, user.userdata]"]