{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\anird\\\\Desktop\\\\phantomTyper\\\\phantomtyper_1.0\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport LoginModal from \"./components/Modal/Modal\";\nimport Header from \"./components/Header/Header\";\nimport DetailsBar from \"./components/SideBar/Bar/DetailBar/DetailBar\";\nimport HistoryBar from \"./components/SideBar/Bar/HistoryBar/HistoryBar\";\nimport TypingChallenge from \"./components/TestContainer/TypingChallenge/TypingChallenge\";\nimport UserChart from \"./components/Chart/UserChart\";\nimport typingTestData from \"./data/exampleText\";\nimport ParagraphContext from \"./contexts/paragraphContext\";\nimport Detailscontext from \"./contexts/detailscontext\";\nimport helperMethods from \"./helper/helper\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [TIMER_STARTED_BOOLEAN, setTIMER_STARTED_BOOLEAN] = useState(false);\n  const [TIMER_TRACKER_BOOLEAN, setTIMER_TRACKER_BOOLEAN] = useState(false);\n  const [CHALLENGE_AREA_BOOLEAN, setCHALLENGE_AREA_BOOLEAN] = useState(true);\n  const [CHARACTER_BOOLEAN, setCHARACTER_BOOLEAN] = useState(true);\n  const [MODAL_IS_OPEN, setMODAL_IS_OPEN] = useState(true);\n  const [RESULT_CARD_BOOLEAN, setRESULT_CARD_BOOLEAN] = useState(false);\n  const [CHART_IS_OPEN, setCHART_IS_OPEN] = useState(false);\n  const [TIME_REMAINING, setTIME_REMAINING] = useState(60);\n  const [RECORD_INCREASE, setRECORD_INCREASE] = useState(0);\n  const [WPM, setWPM] = useState(0);\n  const [KEY_STROKES, setKEY_STROKES] = useState(0);\n  const [ACCURACY, setACCURACY] = useState(0);\n  const [CORRECT, setCORRECT] = useState(0);\n  const [MISSPELLED, setMISSPELLED] = useState(0);\n  const [PARAGRAPH_ARRAY, setPARAGRAPH_ARRAY] = useState([]);\n  const [ACTIVE_PARAGRAPH, setACTIVE_PARAGRAPH] = useState([]);\n  const [WORD_BOOLEANS, setWORD_BOOLEANS] = useState([]);\n  const [TYPING_WORD, setTYPING_WORD] = useState(\"\");\n  const [WORD_INDEX, setWORD_INDEX] = useState(0);\n  const [SLICER_INDEX, setSLICER_INDEX] = useState(0);\n  const [SELECTED_WORD, setSELECTED_WORD] = useState(\"\");\n  const [USERS_DATA, setUSERS_DATA] = useState([]);\n  const [USER_DATA, setUSER_DATA] = useState({});\n  const [USER_STAT, setUSER_STAT] = useState({});\n  const [USER_NAME_FROM_INPUT, setUSER_NAME_FROM_INPUT] = useState(\"\");\n  const [CHAR_CODES, setCHAR_CODES] = useState([]);\n  const [PREV_MOMENT, setPREV_MOMENT] = useState(0);\n  const [MOMENTS_ARRAY, setMOMENTS_ARRAY] = useState([]);\n  const [CHAR_CODES_ARRAY, setCHAR_CODES_ARRAY] = useState([]);\n\n  const ChallengeRestartButtonHandler = () => {\n    setCORRECT(0);\n    setACTIVE_PARAGRAPH([]);\n    setTYPING_WORD(\"\");\n    setPARAGRAPH_ARRAY([]);\n    setSLICER_INDEX(0);\n    setSELECTED_WORD(\"\");\n    setWORD_INDEX(0);\n    setTIMER_STARTED_BOOLEAN(false);\n    setTIME_REMAINING(60);\n    setWORD_BOOLEANS([]);\n    setKEY_STROKES(0);\n    setMISSPELLED(0);\n    setWPM(0);\n    setACCURACY(0);\n    setCHAR_CODES([]);\n    setRECORD_INCREASE(0);\n    setCHALLENGE_AREA_BOOLEAN(true);\n    setPREV_MOMENT(0);\n    setTIMER_TRACKER_BOOLEAN(false);\n    helperMethods.paragraphArraySetter(setPARAGRAPH_ARRAY, helperMethods.randomParagraphSelector, typingTestData);\n  };\n\n  const ChartDataBuilder = user => {\n    helperMethods.dataBuilder({\n      user,\n      TIMER_STARTED_BOOLEAN,\n      setTIMER_STARTED_BOOLEAN,\n      setUSER_STAT,\n      setCHAR_CODES_ARRAY,\n      setMOMENTS_ARRAY,\n      setCHART_IS_OPEN,\n      setTIMER_TRACKER_BOOLEAN\n    });\n  };\n\n  const ChartCloseHandler = () => {\n    setCHART_IS_OPEN(false);\n\n    if (TIMER_TRACKER_BOOLEAN) {\n      setTIMER_STARTED_BOOLEAN(true);\n      setTIMER_TRACKER_BOOLEAN(false);\n    }\n  };\n\n  const DeleteUserNameHandler = user => {\n    helperMethods.deleteUser(user, setUSERS_DATA);\n  };\n\n  const StatingParaLoader = () => {\n    helperMethods.paragraphArraySetter(setPARAGRAPH_ARRAY, helperMethods.randomParagraphSelector, typingTestData);\n  };\n\n  const OnKeyPressHandler = event => {\n    helperMethods.keyPress(helperMethods.wordMatchChecker, {\n      event,\n      CORRECT,\n      CHAR_CODES,\n      SELECTED_WORD,\n      TYPING_WORD,\n      WORD_BOOLEANS,\n      MISSPELLED,\n      PREV_MOMENT,\n      WORD_INDEX,\n      PARAGRAPH_ARRAY,\n      setWORD_INDEX,\n      ChallengeRestartButtonHandler,\n      setMISSPELLED,\n      setCORRECT,\n      setTYPING_WORD,\n      setWORD_BOOLEANS,\n      setACCURACY,\n      setSELECTED_WORD,\n      setKEY_STROKES,\n      setTIMER_STARTED_BOOLEAN,\n      setCHAR_CODES,\n      setPREV_MOMENT\n    });\n  };\n\n  const ActiveParaHandler = () => {\n    ChallengeRestartButtonHandler();\n  };\n\n  const activeParagraphLoader = () => {\n    setWORD_BOOLEANS([]);\n    let [slicedParagraph, index] = helperMethods.paragraphSlicer(PARAGRAPH_ARRAY, SLICER_INDEX);\n    setACTIVE_PARAGRAPH(slicedParagraph);\n    setSLICER_INDEX(index);\n  };\n\n  const modalHandler = () => {\n    if (USER_NAME_FROM_INPUT !== \"\") setMODAL_IS_OPEN(false);\n  };\n\n  const wordMatchHandler = event => {\n    helperMethods.characterMatch({\n      event,\n      SELECTED_WORD,\n      setTYPING_WORD,\n      setCHARACTER_BOOLEAN\n    });\n  };\n\n  const timeRemainingInputHandler = event => {\n    if (!isNaN(event.target.value) && event.target.value[0] !== \"0\") {\n      setTIME_REMAINING(event.target.value);\n    }\n  };\n\n  const counter = () => {\n    setRECORD_INCREASE((prevTime, nextTime) => {\n      return prevTime + 1;\n    });\n    setTIME_REMAINING((prevtime, nexttime) => {\n      return prevtime - 1;\n    });\n  };\n\n  const userResultCardCreator = () => {\n    helperMethods.cardMaker({\n      setRESULT_CARD_BOOLEAN,\n      setUSERS_DATA,\n      setUSER_DATA,\n      USER_NAME_FROM_INPUT,\n      CORRECT,\n      KEY_STROKES,\n      WPM,\n      ACCURACY,\n      MISSPELLED,\n      CHAR_CODES,\n      USERS_DATA\n    });\n  };\n\n  useEffect(() => {\n    setWPM(() => {\n      if (RECORD_INCREASE > 1) {\n        let timeRemainingMinFraction = parseInt(RECORD_INCREASE) / 60;\n        return parseInt(CORRECT ? CORRECT / timeRemainingMinFraction : 0);\n      }\n\n      return 0;\n    });\n  }, [RECORD_INCREASE]);\n  useEffect(() => {\n    if (WORD_INDEX % 46 === 0 && WORD_INDEX > 0) {\n      activeParagraphLoader();\n    }\n  }, [WORD_INDEX]);\n  useEffect(() => {\n    StatingParaLoader();\n  }, []);\n  useEffect(() => {\n    const interval = setInterval(() => {\n      if (TIMER_STARTED_BOOLEAN) {\n        counter();\n      }\n    }, 1000);\n    return () => clearInterval(interval);\n  }, [TIMER_STARTED_BOOLEAN]);\n  useEffect(() => {\n    if (TIME_REMAINING < 1 && TIME_REMAINING !== \"\") {\n      setTIMER_STARTED_BOOLEAN(false);\n      userResultCardCreator();\n      setRESULT_CARD_BOOLEAN(true);\n      ChallengeRestartButtonHandler();\n      setTIMER_TRACKER_BOOLEAN(false);\n    }\n  }, [TIME_REMAINING]);\n  useEffect(() => {\n    if (RESULT_CARD_BOOLEAN) {\n      const timeout = setTimeout(() => {\n        setRESULT_CARD_BOOLEAN(false);\n      }, 10000);\n      return () => clearTimeout(timeout);\n    }\n  }, [PARAGRAPH_ARRAY]);\n  useEffect(() => {\n    setTimeout(() => {\n      setCHALLENGE_AREA_BOOLEAN(false);\n      setSELECTED_WORD(PARAGRAPH_ARRAY[0]);\n      activeParagraphLoader();\n      if (localStorage.getItem(\"usersData\")) setUSERS_DATA(JSON.parse(localStorage.getItem(\"usersData\")));else localStorage.setItem(\"usersData\", JSON.stringify(USERS_DATA));\n    }, 700);\n  }, [PARAGRAPH_ARRAY]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-screen font-serif\",\n    children: [/*#__PURE__*/_jsxDEV(LoginModal, {\n      MODAL_IS_OPEN: MODAL_IS_OPEN,\n      setUSER_NAME_FROM_INPUT: setUSER_NAME_FROM_INPUT,\n      modalHandler: modalHandler\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Header, {\n        userName: USER_NAME_FROM_INPUT\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 285,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 284,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        backGround: \"#F3F2EF\"\n      },\n      className: \"grid grid-cols-8 gap-2 bgwhite  mx-4 p-4 mt-8 challengeArea\",\n      children: [/*#__PURE__*/_jsxDEV(UserChart, {\n        USER_STAT: USER_STAT,\n        MOMENTS_ARRAY: MOMENTS_ARRAY,\n        CHAR_CODES_ARRAY: CHAR_CODES_ARRAY,\n        CHART_IS_OPEN: CHART_IS_OPEN,\n        ChartCloseHandler: ChartCloseHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"col-span-2 lg:col-span-1 p-0 bg-transparent \",\n        children: /*#__PURE__*/_jsxDEV(Detailscontext.Provider, {\n          value: {\n            CORRECT,\n            KEY_STROKES,\n            MISSPELLED,\n            WPM,\n            ACCURACY,\n            USER_DATA,\n            USERS_DATA,\n            DeleteUserNameHandler,\n            USER_NAME_FROM_INPUT,\n            ChartDataBuilder,\n            TIMER_STARTED_BOOLEAN\n          },\n          children: /*#__PURE__*/_jsxDEV(DetailsBar, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 316,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 301,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 300,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          height: \"620px\"\n        },\n        className: \"col-span-6 lg:col-span-5 bg-green-500 pt-8 \",\n        children: /*#__PURE__*/_jsxDEV(ParagraphContext.Provider, {\n          value: {\n            OnKeyPressHandler,\n            TYPING_WORD,\n            wordMatchHandler,\n            ACTIVE_PARAGRAPH,\n            ActiveParaHandler,\n            WORD_INDEX,\n            TIME_REMAINING,\n            timeRemainingInputHandler,\n            CHARACTER_BOOLEAN,\n            WORD_BOOLEANS,\n            SELECTED_WORD,\n            CHALLENGE_AREA_BOOLEAN,\n            ACCURACY,\n            MODAL_IS_OPEN,\n            USER_DATA,\n            RESULT_CARD_BOOLEAN\n          },\n          children: /*#__PURE__*/_jsxDEV(TypingChallenge, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 341,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"hidden lg:block lg:col-span-2 p-8 bg-transparent\",\n        children: /*#__PURE__*/_jsxDEV(HistoryBar, {\n          ChartDataBuilder: ChartDataBuilder,\n          USERS_DATA: USERS_DATA,\n          USER_NAME_FROM_INPUT: USER_NAME_FROM_INPUT,\n          TIMER_STARTED_BOOLEAN: TIMER_STARTED_BOOLEAN,\n          DeleteUserNameHandler: DeleteUserNameHandler,\n          height: \"42rem\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 346,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 277,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"u2uZQWw/94CocLT1cg91UT4howA=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/anird/Desktop/phantomTyper/phantomtyper_1.0/src/App.js"],"names":["React","useState","useEffect","LoginModal","Header","DetailsBar","HistoryBar","TypingChallenge","UserChart","typingTestData","ParagraphContext","Detailscontext","helperMethods","App","TIMER_STARTED_BOOLEAN","setTIMER_STARTED_BOOLEAN","TIMER_TRACKER_BOOLEAN","setTIMER_TRACKER_BOOLEAN","CHALLENGE_AREA_BOOLEAN","setCHALLENGE_AREA_BOOLEAN","CHARACTER_BOOLEAN","setCHARACTER_BOOLEAN","MODAL_IS_OPEN","setMODAL_IS_OPEN","RESULT_CARD_BOOLEAN","setRESULT_CARD_BOOLEAN","CHART_IS_OPEN","setCHART_IS_OPEN","TIME_REMAINING","setTIME_REMAINING","RECORD_INCREASE","setRECORD_INCREASE","WPM","setWPM","KEY_STROKES","setKEY_STROKES","ACCURACY","setACCURACY","CORRECT","setCORRECT","MISSPELLED","setMISSPELLED","PARAGRAPH_ARRAY","setPARAGRAPH_ARRAY","ACTIVE_PARAGRAPH","setACTIVE_PARAGRAPH","WORD_BOOLEANS","setWORD_BOOLEANS","TYPING_WORD","setTYPING_WORD","WORD_INDEX","setWORD_INDEX","SLICER_INDEX","setSLICER_INDEX","SELECTED_WORD","setSELECTED_WORD","USERS_DATA","setUSERS_DATA","USER_DATA","setUSER_DATA","USER_STAT","setUSER_STAT","USER_NAME_FROM_INPUT","setUSER_NAME_FROM_INPUT","CHAR_CODES","setCHAR_CODES","PREV_MOMENT","setPREV_MOMENT","MOMENTS_ARRAY","setMOMENTS_ARRAY","CHAR_CODES_ARRAY","setCHAR_CODES_ARRAY","ChallengeRestartButtonHandler","paragraphArraySetter","randomParagraphSelector","ChartDataBuilder","user","dataBuilder","ChartCloseHandler","DeleteUserNameHandler","deleteUser","StatingParaLoader","OnKeyPressHandler","event","keyPress","wordMatchChecker","ActiveParaHandler","activeParagraphLoader","slicedParagraph","index","paragraphSlicer","modalHandler","wordMatchHandler","characterMatch","timeRemainingInputHandler","isNaN","target","value","counter","prevTime","nextTime","prevtime","nexttime","userResultCardCreator","cardMaker","timeRemainingMinFraction","parseInt","interval","setInterval","clearInterval","timeout","setTimeout","clearTimeout","localStorage","getItem","JSON","parse","setItem","stringify","backGround","height"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport LoginModal from \"./components/Modal/Modal\";\r\nimport Header from \"./components/Header/Header\";\r\nimport DetailsBar from \"./components/SideBar/Bar/DetailBar/DetailBar\";\r\nimport HistoryBar from \"./components/SideBar/Bar/HistoryBar/HistoryBar\";\r\nimport TypingChallenge from \"./components/TestContainer/TypingChallenge/TypingChallenge\";\r\nimport UserChart from \"./components/Chart/UserChart\";\r\nimport typingTestData from \"./data/exampleText\";\r\nimport ParagraphContext from \"./contexts/paragraphContext\";\r\nimport Detailscontext from \"./contexts/detailscontext\";\r\nimport helperMethods from \"./helper/helper\";\r\nimport \"./App.css\";\r\n\r\nconst App = () => {\r\n  const [TIMER_STARTED_BOOLEAN, setTIMER_STARTED_BOOLEAN] = useState(false);\r\n  const [TIMER_TRACKER_BOOLEAN, setTIMER_TRACKER_BOOLEAN] = useState(false);\r\n  const [CHALLENGE_AREA_BOOLEAN, setCHALLENGE_AREA_BOOLEAN] = useState(true);\r\n  const [CHARACTER_BOOLEAN, setCHARACTER_BOOLEAN] = useState(true);\r\n  const [MODAL_IS_OPEN, setMODAL_IS_OPEN] = useState(true);\r\n  const [RESULT_CARD_BOOLEAN, setRESULT_CARD_BOOLEAN] = useState(false);\r\n  const [CHART_IS_OPEN, setCHART_IS_OPEN] = useState(false);\r\n\r\n  const [TIME_REMAINING, setTIME_REMAINING] = useState(60);\r\n  const [RECORD_INCREASE, setRECORD_INCREASE] = useState(0);\r\n\r\n  const [WPM, setWPM] = useState(0);\r\n  const [KEY_STROKES, setKEY_STROKES] = useState(0);\r\n  const [ACCURACY, setACCURACY] = useState(0);\r\n  const [CORRECT, setCORRECT] = useState(0);\r\n  const [MISSPELLED, setMISSPELLED] = useState(0);\r\n  const [PARAGRAPH_ARRAY, setPARAGRAPH_ARRAY] = useState([]);\r\n  const [ACTIVE_PARAGRAPH, setACTIVE_PARAGRAPH] = useState([]);\r\n  const [WORD_BOOLEANS, setWORD_BOOLEANS] = useState([]);\r\n  const [TYPING_WORD, setTYPING_WORD] = useState(\"\");\r\n  const [WORD_INDEX, setWORD_INDEX] = useState(0);\r\n  const [SLICER_INDEX, setSLICER_INDEX] = useState(0);\r\n  const [SELECTED_WORD, setSELECTED_WORD] = useState(\"\");\r\n  const [USERS_DATA, setUSERS_DATA] = useState([]);\r\n  const [USER_DATA, setUSER_DATA] = useState({});\r\n  const [USER_STAT, setUSER_STAT] = useState({});\r\n  const [USER_NAME_FROM_INPUT, setUSER_NAME_FROM_INPUT] = useState(\"\");\r\n\r\n  const [CHAR_CODES, setCHAR_CODES] = useState([]);\r\n  const [PREV_MOMENT, setPREV_MOMENT] = useState(0);\r\n  const [MOMENTS_ARRAY, setMOMENTS_ARRAY] = useState([]);\r\n  const [CHAR_CODES_ARRAY, setCHAR_CODES_ARRAY] = useState([]);\r\n\r\n\r\n  const ChallengeRestartButtonHandler = () => {\r\n    setCORRECT(0);\r\n    setACTIVE_PARAGRAPH([]);\r\n    setTYPING_WORD(\"\");\r\n    setPARAGRAPH_ARRAY([]);\r\n    setSLICER_INDEX(0);\r\n    setSELECTED_WORD(\"\");\r\n    setWORD_INDEX(0);\r\n    setTIMER_STARTED_BOOLEAN(false);\r\n    setTIME_REMAINING(60);\r\n    setWORD_BOOLEANS([]);\r\n    setKEY_STROKES(0);\r\n    setMISSPELLED(0);\r\n    setWPM(0);\r\n    setACCURACY(0);\r\n    setCHAR_CODES([]);\r\n    setRECORD_INCREASE(0);\r\n    setCHALLENGE_AREA_BOOLEAN(true);\r\n    setPREV_MOMENT(0);\r\n    setTIMER_TRACKER_BOOLEAN(false);\r\n    helperMethods.paragraphArraySetter(\r\n      setPARAGRAPH_ARRAY,\r\n      helperMethods.randomParagraphSelector,\r\n      typingTestData\r\n    );\r\n  };\r\n\r\n\r\n  const ChartDataBuilder = (user) => {\r\n    helperMethods.dataBuilder({\r\n      user,\r\n      TIMER_STARTED_BOOLEAN,\r\n      setTIMER_STARTED_BOOLEAN,\r\n      setUSER_STAT,\r\n      setCHAR_CODES_ARRAY,\r\n      setMOMENTS_ARRAY,\r\n      setCHART_IS_OPEN,\r\n      setTIMER_TRACKER_BOOLEAN\r\n    });\r\n  };\r\n\r\n\r\n  const ChartCloseHandler = () => {\r\n    setCHART_IS_OPEN(false);\r\n   if(TIMER_TRACKER_BOOLEAN){\r\n    setTIMER_STARTED_BOOLEAN(true);\r\n    setTIMER_TRACKER_BOOLEAN(false);\r\n   } \r\n  };\r\n\r\n\r\n  const DeleteUserNameHandler = (user) => {\r\n    helperMethods.deleteUser(user, setUSERS_DATA);\r\n  };\r\n\r\n\r\n  const StatingParaLoader = () => {\r\n    helperMethods.paragraphArraySetter(\r\n      setPARAGRAPH_ARRAY,\r\n      helperMethods.randomParagraphSelector,\r\n      typingTestData\r\n    );\r\n  };\r\n\r\n\r\n  const OnKeyPressHandler = (event) => {\r\n    helperMethods.keyPress(helperMethods.wordMatchChecker, {\r\n      event,\r\n      CORRECT,\r\n      CHAR_CODES,\r\n      SELECTED_WORD,\r\n      TYPING_WORD,\r\n      WORD_BOOLEANS,\r\n      MISSPELLED,\r\n      PREV_MOMENT,\r\n      WORD_INDEX,\r\n      PARAGRAPH_ARRAY,\r\n      setWORD_INDEX,\r\n      ChallengeRestartButtonHandler,\r\n      setMISSPELLED,\r\n      setCORRECT,\r\n      setTYPING_WORD,\r\n      setWORD_BOOLEANS,\r\n      setACCURACY,\r\n      setSELECTED_WORD,\r\n      setKEY_STROKES,\r\n      setTIMER_STARTED_BOOLEAN,\r\n      setCHAR_CODES,\r\n      setPREV_MOMENT,\r\n    });\r\n  };\r\n\r\n\r\n  const ActiveParaHandler = () => {\r\n    ChallengeRestartButtonHandler();\r\n  };\r\n\r\n\r\n  const activeParagraphLoader = () => {\r\n    setWORD_BOOLEANS([]);\r\n    let [slicedParagraph, index] = helperMethods.paragraphSlicer(\r\n      PARAGRAPH_ARRAY,\r\n      SLICER_INDEX\r\n    );\r\n    setACTIVE_PARAGRAPH(slicedParagraph);\r\n    setSLICER_INDEX(index);\r\n  };\r\n\r\n\r\n  const modalHandler = () => {\r\n    if (USER_NAME_FROM_INPUT !== \"\") setMODAL_IS_OPEN(false);\r\n  };\r\n\r\n\r\n  const wordMatchHandler = (event) => {\r\n    helperMethods.characterMatch({\r\n      event,\r\n      SELECTED_WORD,\r\n      setTYPING_WORD,\r\n      setCHARACTER_BOOLEAN,\r\n    });\r\n  };\r\n\r\n\r\n  const timeRemainingInputHandler = (event) => {\r\n    if (!isNaN(event.target.value) && event.target.value[0] !== \"0\") {\r\n      setTIME_REMAINING(event.target.value);\r\n    }\r\n  };\r\n\r\n\r\n  const counter = () => {\r\n    setRECORD_INCREASE((prevTime, nextTime) => {\r\n      return prevTime + 1;\r\n    });\r\n    setTIME_REMAINING((prevtime, nexttime) => {\r\n      return prevtime - 1;\r\n    });\r\n  };\r\n\r\n\r\n  const userResultCardCreator = () => {\r\n    helperMethods.cardMaker({\r\n      setRESULT_CARD_BOOLEAN,\r\n      setUSERS_DATA,\r\n      setUSER_DATA,\r\n      USER_NAME_FROM_INPUT,\r\n      CORRECT,\r\n      KEY_STROKES,\r\n      WPM,\r\n      ACCURACY,\r\n      MISSPELLED,\r\n      CHAR_CODES,\r\n      USERS_DATA,\r\n    });\r\n  };\r\n\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    setWPM(() => {\r\n      if (RECORD_INCREASE > 1) {\r\n        let timeRemainingMinFraction = parseInt(RECORD_INCREASE) / 60;\r\n        return parseInt(CORRECT ? CORRECT / timeRemainingMinFraction : 0);\r\n      }\r\n      return 0;\r\n    });\r\n  }, [RECORD_INCREASE]);\r\n\r\n\r\n  \r\n  useEffect(() => {\r\n    if (WORD_INDEX % 46 === 0 && WORD_INDEX > 0) {\r\n      activeParagraphLoader();\r\n    }\r\n  }, [WORD_INDEX]);\r\n\r\n\r\n  useEffect(() => {\r\n    StatingParaLoader();\r\n  }, []);\r\n\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      if (TIMER_STARTED_BOOLEAN) {\r\n        counter();\r\n      }\r\n    }, 1000);\r\n    return () => clearInterval(interval);\r\n  }, [TIMER_STARTED_BOOLEAN]);\r\n\r\n\r\n  useEffect(() => {\r\n    if (TIME_REMAINING < 1 && TIME_REMAINING !== \"\") {\r\n      setTIMER_STARTED_BOOLEAN(false);\r\n      userResultCardCreator();\r\n      setRESULT_CARD_BOOLEAN(true);\r\n      ChallengeRestartButtonHandler();\r\n      setTIMER_TRACKER_BOOLEAN(false);\r\n    }\r\n  }, [TIME_REMAINING]);\r\n\r\n\r\n  useEffect(() => {\r\n    if (RESULT_CARD_BOOLEAN) {\r\n      const timeout = setTimeout(() => {\r\n        setRESULT_CARD_BOOLEAN(false);\r\n      }, 10000);\r\n      return () => clearTimeout(timeout);\r\n    }\r\n  }, [PARAGRAPH_ARRAY]);\r\n\r\n\r\n  useEffect(() => {\r\n    setTimeout(() => {\r\n      setCHALLENGE_AREA_BOOLEAN(false);\r\n      setSELECTED_WORD(PARAGRAPH_ARRAY[0]);\r\n      activeParagraphLoader();\r\n      if (localStorage.getItem(\"usersData\"))\r\n        setUSERS_DATA(JSON.parse(localStorage.getItem(\"usersData\")));\r\n      else localStorage.setItem(\"usersData\", JSON.stringify(USERS_DATA));\r\n    }, 700);\r\n  }, [PARAGRAPH_ARRAY]);\r\n\r\n\r\n  return (\r\n    <div className=\"h-screen font-serif\">\r\n      <LoginModal\r\n        MODAL_IS_OPEN={MODAL_IS_OPEN}\r\n        setUSER_NAME_FROM_INPUT={setUSER_NAME_FROM_INPUT}\r\n        modalHandler={modalHandler}\r\n      />\r\n\r\n      <div>\r\n        <Header userName={USER_NAME_FROM_INPUT} />\r\n      </div>\r\n\r\n      <div\r\n        style={{ backGround: \"#F3F2EF\" }}\r\n        className=\"grid grid-cols-8 gap-2 bgwhite  mx-4 p-4 mt-8 challengeArea\"\r\n      >\r\n        <UserChart\r\n          USER_STAT={USER_STAT}\r\n          MOMENTS_ARRAY={MOMENTS_ARRAY}\r\n          CHAR_CODES_ARRAY={CHAR_CODES_ARRAY}\r\n          CHART_IS_OPEN={CHART_IS_OPEN}\r\n          ChartCloseHandler={ChartCloseHandler}\r\n        />\r\n\r\n        <div className=\"col-span-2 lg:col-span-1 p-0 bg-transparent \">\r\n          <Detailscontext.Provider\r\n            value={{\r\n              CORRECT,\r\n              KEY_STROKES,\r\n              MISSPELLED,\r\n              WPM,\r\n              ACCURACY,\r\n              USER_DATA,\r\n              USERS_DATA,\r\n              DeleteUserNameHandler,\r\n              USER_NAME_FROM_INPUT,\r\n              ChartDataBuilder,\r\n              TIMER_STARTED_BOOLEAN,\r\n            }}\r\n          >\r\n            <DetailsBar />\r\n          </Detailscontext.Provider>\r\n        </div>\r\n\r\n        <div style={{height:\"620px\"}} className=\"col-span-6 lg:col-span-5 bg-green-500 pt-8 \">\r\n          <ParagraphContext.Provider\r\n            value={{\r\n              OnKeyPressHandler,\r\n              TYPING_WORD,\r\n              wordMatchHandler,\r\n              ACTIVE_PARAGRAPH,\r\n              ActiveParaHandler,\r\n              WORD_INDEX,\r\n              TIME_REMAINING,\r\n              timeRemainingInputHandler,\r\n              CHARACTER_BOOLEAN,\r\n              WORD_BOOLEANS,\r\n              SELECTED_WORD,\r\n              CHALLENGE_AREA_BOOLEAN,\r\n              ACCURACY,\r\n              MODAL_IS_OPEN,\r\n              USER_DATA,\r\n              RESULT_CARD_BOOLEAN,\r\n            }}\r\n          >\r\n            <TypingChallenge />\r\n          </ParagraphContext.Provider>\r\n        </div>\r\n\r\n        <div className=\"hidden lg:block lg:col-span-2 p-8 bg-transparent\">\r\n          <HistoryBar\r\n            ChartDataBuilder={ChartDataBuilder}\r\n            USERS_DATA={USERS_DATA}\r\n            USER_NAME_FROM_INPUT={USER_NAME_FROM_INPUT}\r\n            TIMER_STARTED_BOOLEAN={TIMER_STARTED_BOOLEAN}\r\n            DeleteUserNameHandler={DeleteUserNameHandler}\r\n            height={\"42rem\"}\r\n          />\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}